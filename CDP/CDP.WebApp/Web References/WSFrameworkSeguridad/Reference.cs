//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CDP.WebApp.WSFrameworkSeguridad {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SecurityProviderSoap", Namespace="http://framework.irsa.com.ar/WebServices/Security/")]
    public partial class SecurityProvider : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ApplicationGetItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback ApplicationListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserGetItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserListPerGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserListPerPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserListPerParameterOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserIsInRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserLogonOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserLogonByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserLogoffOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserCheckPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserCheckParameterOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUsersEmailByRolOperationCompleted;
        
        private System.Threading.SendOrPostCallback PermissionGetItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback PermissionListOperationCompleted;
        
        private System.Threading.SendOrPostCallback PermissionListPerGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback PermissionSetItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback PermissionRemoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback PermissionParamGetItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback PermissionParamListPerPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback PermissionParamListOperationCompleted;
        
        private System.Threading.SendOrPostCallback PermissionParamSetItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback PermissionParamSetItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PermissionParamRemoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback PermissionValueGetItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback PermissionValueListOperationCompleted;
        
        private System.Threading.SendOrPostCallback PermissionValueSetItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback PermissionValueSetItemsOperationCompleted;
        
        private System.Threading.SendOrPostCallback PermissionValueRemoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupGetItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupsListPerPermissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupsListPerUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupsListPerUserAllAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupPermissionSetItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupPermissionRemoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelegationSetItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelegationGetItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelegationRemoveOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelegationListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserListPerGroupOnlyDelegateTodayOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserListPerGroupOnlyDelegateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserIsInDelegateRoleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserIsInDelegateRoleTodayOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupsListPerUserOnlyDelegateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GroupsListPerUserOnlyDelegateTodayOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllUserListPerGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllUserListPerGroupAtDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserInRolOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserInRolAtDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllGroupsListPerUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback AllGroupsListPerUserAtDateOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SecurityProvider() {
            this.Url = global::CDP.WebApp.Properties.Settings.Default.CDP_WebApp_WSFrameworkSeguridad_SecurityProvider;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ApplicationGetItemCompletedEventHandler ApplicationGetItemCompleted;
        
        /// <remarks/>
        public event ApplicationListCompletedEventHandler ApplicationListCompleted;
        
        /// <remarks/>
        public event UserGetItemCompletedEventHandler UserGetItemCompleted;
        
        /// <remarks/>
        public event UserListCompletedEventHandler UserListCompleted;
        
        /// <remarks/>
        public event UserListPerGroupCompletedEventHandler UserListPerGroupCompleted;
        
        /// <remarks/>
        public event UserListPerPermissionCompletedEventHandler UserListPerPermissionCompleted;
        
        /// <remarks/>
        public event UserListPerParameterCompletedEventHandler UserListPerParameterCompleted;
        
        /// <remarks/>
        public event UserIsInRoleCompletedEventHandler UserIsInRoleCompleted;
        
        /// <remarks/>
        public event UserLogonCompletedEventHandler UserLogonCompleted;
        
        /// <remarks/>
        public event UserLogonByNameCompletedEventHandler UserLogonByNameCompleted;
        
        /// <remarks/>
        public event UserLogoffCompletedEventHandler UserLogoffCompleted;
        
        /// <remarks/>
        public event UserCheckPermissionCompletedEventHandler UserCheckPermissionCompleted;
        
        /// <remarks/>
        public event UserCheckParameterCompletedEventHandler UserCheckParameterCompleted;
        
        /// <remarks/>
        public event GetUsersEmailByRolCompletedEventHandler GetUsersEmailByRolCompleted;
        
        /// <remarks/>
        public event PermissionGetItemCompletedEventHandler PermissionGetItemCompleted;
        
        /// <remarks/>
        public event PermissionListCompletedEventHandler PermissionListCompleted;
        
        /// <remarks/>
        public event PermissionListPerGroupCompletedEventHandler PermissionListPerGroupCompleted;
        
        /// <remarks/>
        public event PermissionSetItemCompletedEventHandler PermissionSetItemCompleted;
        
        /// <remarks/>
        public event PermissionRemoveCompletedEventHandler PermissionRemoveCompleted;
        
        /// <remarks/>
        public event PermissionParamGetItemCompletedEventHandler PermissionParamGetItemCompleted;
        
        /// <remarks/>
        public event PermissionParamListPerPermissionCompletedEventHandler PermissionParamListPerPermissionCompleted;
        
        /// <remarks/>
        public event PermissionParamListCompletedEventHandler PermissionParamListCompleted;
        
        /// <remarks/>
        public event PermissionParamSetItemCompletedEventHandler PermissionParamSetItemCompleted;
        
        /// <remarks/>
        public event PermissionParamSetItemsCompletedEventHandler PermissionParamSetItemsCompleted;
        
        /// <remarks/>
        public event PermissionParamRemoveCompletedEventHandler PermissionParamRemoveCompleted;
        
        /// <remarks/>
        public event PermissionValueGetItemCompletedEventHandler PermissionValueGetItemCompleted;
        
        /// <remarks/>
        public event PermissionValueListCompletedEventHandler PermissionValueListCompleted;
        
        /// <remarks/>
        public event PermissionValueSetItemCompletedEventHandler PermissionValueSetItemCompleted;
        
        /// <remarks/>
        public event PermissionValueSetItemsCompletedEventHandler PermissionValueSetItemsCompleted;
        
        /// <remarks/>
        public event PermissionValueRemoveCompletedEventHandler PermissionValueRemoveCompleted;
        
        /// <remarks/>
        public event ListCompletedEventHandler ListCompleted;
        
        /// <remarks/>
        public event GroupGetItemCompletedEventHandler GroupGetItemCompleted;
        
        /// <remarks/>
        public event GroupListCompletedEventHandler GroupListCompleted;
        
        /// <remarks/>
        public event GroupsListPerPermissionCompletedEventHandler GroupsListPerPermissionCompleted;
        
        /// <remarks/>
        public event GroupsListPerUserCompletedEventHandler GroupsListPerUserCompleted;
        
        /// <remarks/>
        public event GroupsListPerUserAllAppCompletedEventHandler GroupsListPerUserAllAppCompleted;
        
        /// <remarks/>
        public event GroupPermissionSetItemCompletedEventHandler GroupPermissionSetItemCompleted;
        
        /// <remarks/>
        public event GroupPermissionRemoveCompletedEventHandler GroupPermissionRemoveCompleted;
        
        /// <remarks/>
        public event DelegationSetItemCompletedEventHandler DelegationSetItemCompleted;
        
        /// <remarks/>
        public event DelegationGetItemCompletedEventHandler DelegationGetItemCompleted;
        
        /// <remarks/>
        public event DelegationRemoveCompletedEventHandler DelegationRemoveCompleted;
        
        /// <remarks/>
        public event DelegationListCompletedEventHandler DelegationListCompleted;
        
        /// <remarks/>
        public event UserListPerGroupOnlyDelegateTodayCompletedEventHandler UserListPerGroupOnlyDelegateTodayCompleted;
        
        /// <remarks/>
        public event UserListPerGroupOnlyDelegateCompletedEventHandler UserListPerGroupOnlyDelegateCompleted;
        
        /// <remarks/>
        public event UserIsInDelegateRoleCompletedEventHandler UserIsInDelegateRoleCompleted;
        
        /// <remarks/>
        public event UserIsInDelegateRoleTodayCompletedEventHandler UserIsInDelegateRoleTodayCompleted;
        
        /// <remarks/>
        public event GroupsListPerUserOnlyDelegateCompletedEventHandler GroupsListPerUserOnlyDelegateCompleted;
        
        /// <remarks/>
        public event GroupsListPerUserOnlyDelegateTodayCompletedEventHandler GroupsListPerUserOnlyDelegateTodayCompleted;
        
        /// <remarks/>
        public event AllUserListPerGroupCompletedEventHandler AllUserListPerGroupCompleted;
        
        /// <remarks/>
        public event AllUserListPerGroupAtDateCompletedEventHandler AllUserListPerGroupAtDateCompleted;
        
        /// <remarks/>
        public event IsUserInRolCompletedEventHandler IsUserInRolCompleted;
        
        /// <remarks/>
        public event IsUserInRolAtDateCompletedEventHandler IsUserInRolAtDateCompleted;
        
        /// <remarks/>
        public event AllGroupsListPerUserCompletedEventHandler AllGroupsListPerUserCompleted;
        
        /// <remarks/>
        public event AllGroupsListPerUserAtDateCompletedEventHandler AllGroupsListPerUserAtDateCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/ApplicationGetItem", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Application ApplicationGetItem(int idApplication) {
            object[] results = this.Invoke("ApplicationGetItem", new object[] {
                        idApplication});
            return ((Application)(results[0]));
        }
        
        /// <remarks/>
        public void ApplicationGetItemAsync(int idApplication) {
            this.ApplicationGetItemAsync(idApplication, null);
        }
        
        /// <remarks/>
        public void ApplicationGetItemAsync(int idApplication, object userState) {
            if ((this.ApplicationGetItemOperationCompleted == null)) {
                this.ApplicationGetItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplicationGetItemOperationCompleted);
            }
            this.InvokeAsync("ApplicationGetItem", new object[] {
                        idApplication}, this.ApplicationGetItemOperationCompleted, userState);
        }
        
        private void OnApplicationGetItemOperationCompleted(object arg) {
            if ((this.ApplicationGetItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplicationGetItemCompleted(this, new ApplicationGetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/ApplicationList", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Application[] ApplicationList(Application application) {
            object[] results = this.Invoke("ApplicationList", new object[] {
                        application});
            return ((Application[])(results[0]));
        }
        
        /// <remarks/>
        public void ApplicationListAsync(Application application) {
            this.ApplicationListAsync(application, null);
        }
        
        /// <remarks/>
        public void ApplicationListAsync(Application application, object userState) {
            if ((this.ApplicationListOperationCompleted == null)) {
                this.ApplicationListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnApplicationListOperationCompleted);
            }
            this.InvokeAsync("ApplicationList", new object[] {
                        application}, this.ApplicationListOperationCompleted, userState);
        }
        
        private void OnApplicationListOperationCompleted(object arg) {
            if ((this.ApplicationListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ApplicationListCompleted(this, new ApplicationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/UserGetItem", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User UserGetItem(int id, int idApplication) {
            object[] results = this.Invoke("UserGetItem", new object[] {
                        id,
                        idApplication});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void UserGetItemAsync(int id, int idApplication) {
            this.UserGetItemAsync(id, idApplication, null);
        }
        
        /// <remarks/>
        public void UserGetItemAsync(int id, int idApplication, object userState) {
            if ((this.UserGetItemOperationCompleted == null)) {
                this.UserGetItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserGetItemOperationCompleted);
            }
            this.InvokeAsync("UserGetItem", new object[] {
                        id,
                        idApplication}, this.UserGetItemOperationCompleted, userState);
        }
        
        private void OnUserGetItemOperationCompleted(object arg) {
            if ((this.UserGetItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserGetItemCompleted(this, new UserGetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/UserList", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] UserList(User filter, int idApplication) {
            object[] results = this.Invoke("UserList", new object[] {
                        filter,
                        idApplication});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void UserListAsync(User filter, int idApplication) {
            this.UserListAsync(filter, idApplication, null);
        }
        
        /// <remarks/>
        public void UserListAsync(User filter, int idApplication, object userState) {
            if ((this.UserListOperationCompleted == null)) {
                this.UserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserListOperationCompleted);
            }
            this.InvokeAsync("UserList", new object[] {
                        filter,
                        idApplication}, this.UserListOperationCompleted, userState);
        }
        
        private void OnUserListOperationCompleted(object arg) {
            if ((this.UserListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserListCompleted(this, new UserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/UserListPerGroup", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] UserListPerGroup(Group grupo) {
            object[] results = this.Invoke("UserListPerGroup", new object[] {
                        grupo});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void UserListPerGroupAsync(Group grupo) {
            this.UserListPerGroupAsync(grupo, null);
        }
        
        /// <remarks/>
        public void UserListPerGroupAsync(Group grupo, object userState) {
            if ((this.UserListPerGroupOperationCompleted == null)) {
                this.UserListPerGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserListPerGroupOperationCompleted);
            }
            this.InvokeAsync("UserListPerGroup", new object[] {
                        grupo}, this.UserListPerGroupOperationCompleted, userState);
        }
        
        private void OnUserListPerGroupOperationCompleted(object arg) {
            if ((this.UserListPerGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserListPerGroupCompleted(this, new UserListPerGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/UserListPerPermission", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] UserListPerPermission(Permission permission) {
            object[] results = this.Invoke("UserListPerPermission", new object[] {
                        permission});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void UserListPerPermissionAsync(Permission permission) {
            this.UserListPerPermissionAsync(permission, null);
        }
        
        /// <remarks/>
        public void UserListPerPermissionAsync(Permission permission, object userState) {
            if ((this.UserListPerPermissionOperationCompleted == null)) {
                this.UserListPerPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserListPerPermissionOperationCompleted);
            }
            this.InvokeAsync("UserListPerPermission", new object[] {
                        permission}, this.UserListPerPermissionOperationCompleted, userState);
        }
        
        private void OnUserListPerPermissionOperationCompleted(object arg) {
            if ((this.UserListPerPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserListPerPermissionCompleted(this, new UserListPerPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/UserListPerParameter", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] UserListPerParameter(PermissionValue permissionvalue) {
            object[] results = this.Invoke("UserListPerParameter", new object[] {
                        permissionvalue});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void UserListPerParameterAsync(PermissionValue permissionvalue) {
            this.UserListPerParameterAsync(permissionvalue, null);
        }
        
        /// <remarks/>
        public void UserListPerParameterAsync(PermissionValue permissionvalue, object userState) {
            if ((this.UserListPerParameterOperationCompleted == null)) {
                this.UserListPerParameterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserListPerParameterOperationCompleted);
            }
            this.InvokeAsync("UserListPerParameter", new object[] {
                        permissionvalue}, this.UserListPerParameterOperationCompleted, userState);
        }
        
        private void OnUserListPerParameterOperationCompleted(object arg) {
            if ((this.UserListPerParameterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserListPerParameterCompleted(this, new UserListPerParameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/UserIsInRole", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserIsInRole(User user, Group grupo) {
            object[] results = this.Invoke("UserIsInRole", new object[] {
                        user,
                        grupo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserIsInRoleAsync(User user, Group grupo) {
            this.UserIsInRoleAsync(user, grupo, null);
        }
        
        /// <remarks/>
        public void UserIsInRoleAsync(User user, Group grupo, object userState) {
            if ((this.UserIsInRoleOperationCompleted == null)) {
                this.UserIsInRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserIsInRoleOperationCompleted);
            }
            this.InvokeAsync("UserIsInRole", new object[] {
                        user,
                        grupo}, this.UserIsInRoleOperationCompleted, userState);
        }
        
        private void OnUserIsInRoleOperationCompleted(object arg) {
            if ((this.UserIsInRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserIsInRoleCompleted(this, new UserIsInRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/UserLogon", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User UserLogon(int idApplication) {
            object[] results = this.Invoke("UserLogon", new object[] {
                        idApplication});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void UserLogonAsync(int idApplication) {
            this.UserLogonAsync(idApplication, null);
        }
        
        /// <remarks/>
        public void UserLogonAsync(int idApplication, object userState) {
            if ((this.UserLogonOperationCompleted == null)) {
                this.UserLogonOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLogonOperationCompleted);
            }
            this.InvokeAsync("UserLogon", new object[] {
                        idApplication}, this.UserLogonOperationCompleted, userState);
        }
        
        private void OnUserLogonOperationCompleted(object arg) {
            if ((this.UserLogonCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLogonCompleted(this, new UserLogonCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/UserLogonByName", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User UserLogonByName(string ntUserName, int idApplication) {
            object[] results = this.Invoke("UserLogonByName", new object[] {
                        ntUserName,
                        idApplication});
            return ((User)(results[0]));
        }
        
        /// <remarks/>
        public void UserLogonByNameAsync(string ntUserName, int idApplication) {
            this.UserLogonByNameAsync(ntUserName, idApplication, null);
        }
        
        /// <remarks/>
        public void UserLogonByNameAsync(string ntUserName, int idApplication, object userState) {
            if ((this.UserLogonByNameOperationCompleted == null)) {
                this.UserLogonByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLogonByNameOperationCompleted);
            }
            this.InvokeAsync("UserLogonByName", new object[] {
                        ntUserName,
                        idApplication}, this.UserLogonByNameOperationCompleted, userState);
        }
        
        private void OnUserLogonByNameOperationCompleted(object arg) {
            if ((this.UserLogonByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLogonByNameCompleted(this, new UserLogonByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/UserLogoff", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UserLogoff(int idApplication) {
            this.Invoke("UserLogoff", new object[] {
                        idApplication});
        }
        
        /// <remarks/>
        public void UserLogoffAsync(int idApplication) {
            this.UserLogoffAsync(idApplication, null);
        }
        
        /// <remarks/>
        public void UserLogoffAsync(int idApplication, object userState) {
            if ((this.UserLogoffOperationCompleted == null)) {
                this.UserLogoffOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLogoffOperationCompleted);
            }
            this.InvokeAsync("UserLogoff", new object[] {
                        idApplication}, this.UserLogoffOperationCompleted, userState);
        }
        
        private void OnUserLogoffOperationCompleted(object arg) {
            if ((this.UserLogoffCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLogoffCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/UserCheckPermission", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserCheckPermission(User user, Permission permission) {
            object[] results = this.Invoke("UserCheckPermission", new object[] {
                        user,
                        permission});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserCheckPermissionAsync(User user, Permission permission) {
            this.UserCheckPermissionAsync(user, permission, null);
        }
        
        /// <remarks/>
        public void UserCheckPermissionAsync(User user, Permission permission, object userState) {
            if ((this.UserCheckPermissionOperationCompleted == null)) {
                this.UserCheckPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserCheckPermissionOperationCompleted);
            }
            this.InvokeAsync("UserCheckPermission", new object[] {
                        user,
                        permission}, this.UserCheckPermissionOperationCompleted, userState);
        }
        
        private void OnUserCheckPermissionOperationCompleted(object arg) {
            if ((this.UserCheckPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserCheckPermissionCompleted(this, new UserCheckPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/UserCheckParameter", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserCheckParameter(User user, Permission permission, KeyValueItem parameter) {
            object[] results = this.Invoke("UserCheckParameter", new object[] {
                        user,
                        permission,
                        parameter});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserCheckParameterAsync(User user, Permission permission, KeyValueItem parameter) {
            this.UserCheckParameterAsync(user, permission, parameter, null);
        }
        
        /// <remarks/>
        public void UserCheckParameterAsync(User user, Permission permission, KeyValueItem parameter, object userState) {
            if ((this.UserCheckParameterOperationCompleted == null)) {
                this.UserCheckParameterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserCheckParameterOperationCompleted);
            }
            this.InvokeAsync("UserCheckParameter", new object[] {
                        user,
                        permission,
                        parameter}, this.UserCheckParameterOperationCompleted, userState);
        }
        
        private void OnUserCheckParameterOperationCompleted(object arg) {
            if ((this.UserCheckParameterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserCheckParameterCompleted(this, new UserCheckParameterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/GetUsersEmailByRol", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetUsersEmailByRol(string rol, string IdApplication) {
            object[] results = this.Invoke("GetUsersEmailByRol", new object[] {
                        rol,
                        IdApplication});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetUsersEmailByRolAsync(string rol, string IdApplication) {
            this.GetUsersEmailByRolAsync(rol, IdApplication, null);
        }
        
        /// <remarks/>
        public void GetUsersEmailByRolAsync(string rol, string IdApplication, object userState) {
            if ((this.GetUsersEmailByRolOperationCompleted == null)) {
                this.GetUsersEmailByRolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUsersEmailByRolOperationCompleted);
            }
            this.InvokeAsync("GetUsersEmailByRol", new object[] {
                        rol,
                        IdApplication}, this.GetUsersEmailByRolOperationCompleted, userState);
        }
        
        private void OnGetUsersEmailByRolOperationCompleted(object arg) {
            if ((this.GetUsersEmailByRolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUsersEmailByRolCompleted(this, new GetUsersEmailByRolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/PermissionGetItem", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Permission PermissionGetItem(int id, int idApplication) {
            object[] results = this.Invoke("PermissionGetItem", new object[] {
                        id,
                        idApplication});
            return ((Permission)(results[0]));
        }
        
        /// <remarks/>
        public void PermissionGetItemAsync(int id, int idApplication) {
            this.PermissionGetItemAsync(id, idApplication, null);
        }
        
        /// <remarks/>
        public void PermissionGetItemAsync(int id, int idApplication, object userState) {
            if ((this.PermissionGetItemOperationCompleted == null)) {
                this.PermissionGetItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPermissionGetItemOperationCompleted);
            }
            this.InvokeAsync("PermissionGetItem", new object[] {
                        id,
                        idApplication}, this.PermissionGetItemOperationCompleted, userState);
        }
        
        private void OnPermissionGetItemOperationCompleted(object arg) {
            if ((this.PermissionGetItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PermissionGetItemCompleted(this, new PermissionGetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/PermissionList", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Permission[] PermissionList(Permission filter) {
            object[] results = this.Invoke("PermissionList", new object[] {
                        filter});
            return ((Permission[])(results[0]));
        }
        
        /// <remarks/>
        public void PermissionListAsync(Permission filter) {
            this.PermissionListAsync(filter, null);
        }
        
        /// <remarks/>
        public void PermissionListAsync(Permission filter, object userState) {
            if ((this.PermissionListOperationCompleted == null)) {
                this.PermissionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPermissionListOperationCompleted);
            }
            this.InvokeAsync("PermissionList", new object[] {
                        filter}, this.PermissionListOperationCompleted, userState);
        }
        
        private void OnPermissionListOperationCompleted(object arg) {
            if ((this.PermissionListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PermissionListCompleted(this, new PermissionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/PermissionListPerGroup", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Permission[] PermissionListPerGroup(Group grupo) {
            object[] results = this.Invoke("PermissionListPerGroup", new object[] {
                        grupo});
            return ((Permission[])(results[0]));
        }
        
        /// <remarks/>
        public void PermissionListPerGroupAsync(Group grupo) {
            this.PermissionListPerGroupAsync(grupo, null);
        }
        
        /// <remarks/>
        public void PermissionListPerGroupAsync(Group grupo, object userState) {
            if ((this.PermissionListPerGroupOperationCompleted == null)) {
                this.PermissionListPerGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPermissionListPerGroupOperationCompleted);
            }
            this.InvokeAsync("PermissionListPerGroup", new object[] {
                        grupo}, this.PermissionListPerGroupOperationCompleted, userState);
        }
        
        private void OnPermissionListPerGroupOperationCompleted(object arg) {
            if ((this.PermissionListPerGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PermissionListPerGroupCompleted(this, new PermissionListPerGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/PermissionSetItem", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Permission PermissionSetItem(Permission permission) {
            object[] results = this.Invoke("PermissionSetItem", new object[] {
                        permission});
            return ((Permission)(results[0]));
        }
        
        /// <remarks/>
        public void PermissionSetItemAsync(Permission permission) {
            this.PermissionSetItemAsync(permission, null);
        }
        
        /// <remarks/>
        public void PermissionSetItemAsync(Permission permission, object userState) {
            if ((this.PermissionSetItemOperationCompleted == null)) {
                this.PermissionSetItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPermissionSetItemOperationCompleted);
            }
            this.InvokeAsync("PermissionSetItem", new object[] {
                        permission}, this.PermissionSetItemOperationCompleted, userState);
        }
        
        private void OnPermissionSetItemOperationCompleted(object arg) {
            if ((this.PermissionSetItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PermissionSetItemCompleted(this, new PermissionSetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/PermissionRemove", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PermissionRemove(Permission permission) {
            this.Invoke("PermissionRemove", new object[] {
                        permission});
        }
        
        /// <remarks/>
        public void PermissionRemoveAsync(Permission permission) {
            this.PermissionRemoveAsync(permission, null);
        }
        
        /// <remarks/>
        public void PermissionRemoveAsync(Permission permission, object userState) {
            if ((this.PermissionRemoveOperationCompleted == null)) {
                this.PermissionRemoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPermissionRemoveOperationCompleted);
            }
            this.InvokeAsync("PermissionRemove", new object[] {
                        permission}, this.PermissionRemoveOperationCompleted, userState);
        }
        
        private void OnPermissionRemoveOperationCompleted(object arg) {
            if ((this.PermissionRemoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PermissionRemoveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/PermissionParamGetItem", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PermissionParam PermissionParamGetItem(Permission perm, string key) {
            object[] results = this.Invoke("PermissionParamGetItem", new object[] {
                        perm,
                        key});
            return ((PermissionParam)(results[0]));
        }
        
        /// <remarks/>
        public void PermissionParamGetItemAsync(Permission perm, string key) {
            this.PermissionParamGetItemAsync(perm, key, null);
        }
        
        /// <remarks/>
        public void PermissionParamGetItemAsync(Permission perm, string key, object userState) {
            if ((this.PermissionParamGetItemOperationCompleted == null)) {
                this.PermissionParamGetItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPermissionParamGetItemOperationCompleted);
            }
            this.InvokeAsync("PermissionParamGetItem", new object[] {
                        perm,
                        key}, this.PermissionParamGetItemOperationCompleted, userState);
        }
        
        private void OnPermissionParamGetItemOperationCompleted(object arg) {
            if ((this.PermissionParamGetItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PermissionParamGetItemCompleted(this, new PermissionParamGetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/PermissionParamListPerPermissio" +
            "n", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PermissionParam[] PermissionParamListPerPermission(Permission filter) {
            object[] results = this.Invoke("PermissionParamListPerPermission", new object[] {
                        filter});
            return ((PermissionParam[])(results[0]));
        }
        
        /// <remarks/>
        public void PermissionParamListPerPermissionAsync(Permission filter) {
            this.PermissionParamListPerPermissionAsync(filter, null);
        }
        
        /// <remarks/>
        public void PermissionParamListPerPermissionAsync(Permission filter, object userState) {
            if ((this.PermissionParamListPerPermissionOperationCompleted == null)) {
                this.PermissionParamListPerPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPermissionParamListPerPermissionOperationCompleted);
            }
            this.InvokeAsync("PermissionParamListPerPermission", new object[] {
                        filter}, this.PermissionParamListPerPermissionOperationCompleted, userState);
        }
        
        private void OnPermissionParamListPerPermissionOperationCompleted(object arg) {
            if ((this.PermissionParamListPerPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PermissionParamListPerPermissionCompleted(this, new PermissionParamListPerPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/PermissionParamList", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PermissionParam[] PermissionParamList(PermissionParam filter) {
            object[] results = this.Invoke("PermissionParamList", new object[] {
                        filter});
            return ((PermissionParam[])(results[0]));
        }
        
        /// <remarks/>
        public void PermissionParamListAsync(PermissionParam filter) {
            this.PermissionParamListAsync(filter, null);
        }
        
        /// <remarks/>
        public void PermissionParamListAsync(PermissionParam filter, object userState) {
            if ((this.PermissionParamListOperationCompleted == null)) {
                this.PermissionParamListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPermissionParamListOperationCompleted);
            }
            this.InvokeAsync("PermissionParamList", new object[] {
                        filter}, this.PermissionParamListOperationCompleted, userState);
        }
        
        private void OnPermissionParamListOperationCompleted(object arg) {
            if ((this.PermissionParamListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PermissionParamListCompleted(this, new PermissionParamListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/PermissionParamSetItem", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PermissionParam PermissionParamSetItem(PermissionParam parameter) {
            object[] results = this.Invoke("PermissionParamSetItem", new object[] {
                        parameter});
            return ((PermissionParam)(results[0]));
        }
        
        /// <remarks/>
        public void PermissionParamSetItemAsync(PermissionParam parameter) {
            this.PermissionParamSetItemAsync(parameter, null);
        }
        
        /// <remarks/>
        public void PermissionParamSetItemAsync(PermissionParam parameter, object userState) {
            if ((this.PermissionParamSetItemOperationCompleted == null)) {
                this.PermissionParamSetItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPermissionParamSetItemOperationCompleted);
            }
            this.InvokeAsync("PermissionParamSetItem", new object[] {
                        parameter}, this.PermissionParamSetItemOperationCompleted, userState);
        }
        
        private void OnPermissionParamSetItemOperationCompleted(object arg) {
            if ((this.PermissionParamSetItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PermissionParamSetItemCompleted(this, new PermissionParamSetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/PermissionParamSetItems", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PermissionParam[] PermissionParamSetItems(PermissionParam[] perparams) {
            object[] results = this.Invoke("PermissionParamSetItems", new object[] {
                        perparams});
            return ((PermissionParam[])(results[0]));
        }
        
        /// <remarks/>
        public void PermissionParamSetItemsAsync(PermissionParam[] perparams) {
            this.PermissionParamSetItemsAsync(perparams, null);
        }
        
        /// <remarks/>
        public void PermissionParamSetItemsAsync(PermissionParam[] perparams, object userState) {
            if ((this.PermissionParamSetItemsOperationCompleted == null)) {
                this.PermissionParamSetItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPermissionParamSetItemsOperationCompleted);
            }
            this.InvokeAsync("PermissionParamSetItems", new object[] {
                        perparams}, this.PermissionParamSetItemsOperationCompleted, userState);
        }
        
        private void OnPermissionParamSetItemsOperationCompleted(object arg) {
            if ((this.PermissionParamSetItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PermissionParamSetItemsCompleted(this, new PermissionParamSetItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/PermissionParamRemove", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PermissionParamRemove(Permission perm, string key) {
            this.Invoke("PermissionParamRemove", new object[] {
                        perm,
                        key});
        }
        
        /// <remarks/>
        public void PermissionParamRemoveAsync(Permission perm, string key) {
            this.PermissionParamRemoveAsync(perm, key, null);
        }
        
        /// <remarks/>
        public void PermissionParamRemoveAsync(Permission perm, string key, object userState) {
            if ((this.PermissionParamRemoveOperationCompleted == null)) {
                this.PermissionParamRemoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPermissionParamRemoveOperationCompleted);
            }
            this.InvokeAsync("PermissionParamRemove", new object[] {
                        perm,
                        key}, this.PermissionParamRemoveOperationCompleted, userState);
        }
        
        private void OnPermissionParamRemoveOperationCompleted(object arg) {
            if ((this.PermissionParamRemoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PermissionParamRemoveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/PermissionValueGetItem", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PermissionValue PermissionValueGetItem(Permission perm, Group group, string key, string value) {
            object[] results = this.Invoke("PermissionValueGetItem", new object[] {
                        perm,
                        group,
                        key,
                        value});
            return ((PermissionValue)(results[0]));
        }
        
        /// <remarks/>
        public void PermissionValueGetItemAsync(Permission perm, Group group, string key, string value) {
            this.PermissionValueGetItemAsync(perm, group, key, value, null);
        }
        
        /// <remarks/>
        public void PermissionValueGetItemAsync(Permission perm, Group group, string key, string value, object userState) {
            if ((this.PermissionValueGetItemOperationCompleted == null)) {
                this.PermissionValueGetItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPermissionValueGetItemOperationCompleted);
            }
            this.InvokeAsync("PermissionValueGetItem", new object[] {
                        perm,
                        group,
                        key,
                        value}, this.PermissionValueGetItemOperationCompleted, userState);
        }
        
        private void OnPermissionValueGetItemOperationCompleted(object arg) {
            if ((this.PermissionValueGetItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PermissionValueGetItemCompleted(this, new PermissionValueGetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/PermissionValueList", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PermissionValue[] PermissionValueList(PermissionValue filter) {
            object[] results = this.Invoke("PermissionValueList", new object[] {
                        filter});
            return ((PermissionValue[])(results[0]));
        }
        
        /// <remarks/>
        public void PermissionValueListAsync(PermissionValue filter) {
            this.PermissionValueListAsync(filter, null);
        }
        
        /// <remarks/>
        public void PermissionValueListAsync(PermissionValue filter, object userState) {
            if ((this.PermissionValueListOperationCompleted == null)) {
                this.PermissionValueListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPermissionValueListOperationCompleted);
            }
            this.InvokeAsync("PermissionValueList", new object[] {
                        filter}, this.PermissionValueListOperationCompleted, userState);
        }
        
        private void OnPermissionValueListOperationCompleted(object arg) {
            if ((this.PermissionValueListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PermissionValueListCompleted(this, new PermissionValueListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/PermissionValueSetItem", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PermissionValue PermissionValueSetItem(PermissionValue pervalue) {
            object[] results = this.Invoke("PermissionValueSetItem", new object[] {
                        pervalue});
            return ((PermissionValue)(results[0]));
        }
        
        /// <remarks/>
        public void PermissionValueSetItemAsync(PermissionValue pervalue) {
            this.PermissionValueSetItemAsync(pervalue, null);
        }
        
        /// <remarks/>
        public void PermissionValueSetItemAsync(PermissionValue pervalue, object userState) {
            if ((this.PermissionValueSetItemOperationCompleted == null)) {
                this.PermissionValueSetItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPermissionValueSetItemOperationCompleted);
            }
            this.InvokeAsync("PermissionValueSetItem", new object[] {
                        pervalue}, this.PermissionValueSetItemOperationCompleted, userState);
        }
        
        private void OnPermissionValueSetItemOperationCompleted(object arg) {
            if ((this.PermissionValueSetItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PermissionValueSetItemCompleted(this, new PermissionValueSetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/PermissionValueSetItems", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PermissionValue[] PermissionValueSetItems(PermissionValue[] values) {
            object[] results = this.Invoke("PermissionValueSetItems", new object[] {
                        values});
            return ((PermissionValue[])(results[0]));
        }
        
        /// <remarks/>
        public void PermissionValueSetItemsAsync(PermissionValue[] values) {
            this.PermissionValueSetItemsAsync(values, null);
        }
        
        /// <remarks/>
        public void PermissionValueSetItemsAsync(PermissionValue[] values, object userState) {
            if ((this.PermissionValueSetItemsOperationCompleted == null)) {
                this.PermissionValueSetItemsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPermissionValueSetItemsOperationCompleted);
            }
            this.InvokeAsync("PermissionValueSetItems", new object[] {
                        values}, this.PermissionValueSetItemsOperationCompleted, userState);
        }
        
        private void OnPermissionValueSetItemsOperationCompleted(object arg) {
            if ((this.PermissionValueSetItemsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PermissionValueSetItemsCompleted(this, new PermissionValueSetItemsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/PermissionValueRemove", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PermissionValueRemove(Permission perm, Group group, string key, string value) {
            this.Invoke("PermissionValueRemove", new object[] {
                        perm,
                        group,
                        key,
                        value});
        }
        
        /// <remarks/>
        public void PermissionValueRemoveAsync(Permission perm, Group group, string key, string value) {
            this.PermissionValueRemoveAsync(perm, group, key, value, null);
        }
        
        /// <remarks/>
        public void PermissionValueRemoveAsync(Permission perm, Group group, string key, string value, object userState) {
            if ((this.PermissionValueRemoveOperationCompleted == null)) {
                this.PermissionValueRemoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPermissionValueRemoveOperationCompleted);
            }
            this.InvokeAsync("PermissionValueRemove", new object[] {
                        perm,
                        group,
                        key,
                        value}, this.PermissionValueRemoveOperationCompleted, userState);
        }
        
        private void OnPermissionValueRemoveOperationCompleted(object arg) {
            if ((this.PermissionValueRemoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PermissionValueRemoveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/List", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PermissionValue[] List(PermissionValue filter) {
            object[] results = this.Invoke("List", new object[] {
                        filter});
            return ((PermissionValue[])(results[0]));
        }
        
        /// <remarks/>
        public void ListAsync(PermissionValue filter) {
            this.ListAsync(filter, null);
        }
        
        /// <remarks/>
        public void ListAsync(PermissionValue filter, object userState) {
            if ((this.ListOperationCompleted == null)) {
                this.ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListOperationCompleted);
            }
            this.InvokeAsync("List", new object[] {
                        filter}, this.ListOperationCompleted, userState);
        }
        
        private void OnListOperationCompleted(object arg) {
            if ((this.ListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListCompleted(this, new ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/GroupGetItem", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group GroupGetItem(int id, int idApplication) {
            object[] results = this.Invoke("GroupGetItem", new object[] {
                        id,
                        idApplication});
            return ((Group)(results[0]));
        }
        
        /// <remarks/>
        public void GroupGetItemAsync(int id, int idApplication) {
            this.GroupGetItemAsync(id, idApplication, null);
        }
        
        /// <remarks/>
        public void GroupGetItemAsync(int id, int idApplication, object userState) {
            if ((this.GroupGetItemOperationCompleted == null)) {
                this.GroupGetItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupGetItemOperationCompleted);
            }
            this.InvokeAsync("GroupGetItem", new object[] {
                        id,
                        idApplication}, this.GroupGetItemOperationCompleted, userState);
        }
        
        private void OnGroupGetItemOperationCompleted(object arg) {
            if ((this.GroupGetItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupGetItemCompleted(this, new GroupGetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/GroupList", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] GroupList(Group filter) {
            object[] results = this.Invoke("GroupList", new object[] {
                        filter});
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void GroupListAsync(Group filter) {
            this.GroupListAsync(filter, null);
        }
        
        /// <remarks/>
        public void GroupListAsync(Group filter, object userState) {
            if ((this.GroupListOperationCompleted == null)) {
                this.GroupListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupListOperationCompleted);
            }
            this.InvokeAsync("GroupList", new object[] {
                        filter}, this.GroupListOperationCompleted, userState);
        }
        
        private void OnGroupListOperationCompleted(object arg) {
            if ((this.GroupListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupListCompleted(this, new GroupListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/GroupsListPerPermission", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] GroupsListPerPermission(Permission permission) {
            object[] results = this.Invoke("GroupsListPerPermission", new object[] {
                        permission});
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void GroupsListPerPermissionAsync(Permission permission) {
            this.GroupsListPerPermissionAsync(permission, null);
        }
        
        /// <remarks/>
        public void GroupsListPerPermissionAsync(Permission permission, object userState) {
            if ((this.GroupsListPerPermissionOperationCompleted == null)) {
                this.GroupsListPerPermissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupsListPerPermissionOperationCompleted);
            }
            this.InvokeAsync("GroupsListPerPermission", new object[] {
                        permission}, this.GroupsListPerPermissionOperationCompleted, userState);
        }
        
        private void OnGroupsListPerPermissionOperationCompleted(object arg) {
            if ((this.GroupsListPerPermissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupsListPerPermissionCompleted(this, new GroupsListPerPermissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/GroupsListPerUser", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] GroupsListPerUser(User user, int idApplication) {
            object[] results = this.Invoke("GroupsListPerUser", new object[] {
                        user,
                        idApplication});
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void GroupsListPerUserAsync(User user, int idApplication) {
            this.GroupsListPerUserAsync(user, idApplication, null);
        }
        
        /// <remarks/>
        public void GroupsListPerUserAsync(User user, int idApplication, object userState) {
            if ((this.GroupsListPerUserOperationCompleted == null)) {
                this.GroupsListPerUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupsListPerUserOperationCompleted);
            }
            this.InvokeAsync("GroupsListPerUser", new object[] {
                        user,
                        idApplication}, this.GroupsListPerUserOperationCompleted, userState);
        }
        
        private void OnGroupsListPerUserOperationCompleted(object arg) {
            if ((this.GroupsListPerUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupsListPerUserCompleted(this, new GroupsListPerUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/GroupsListPerUserAllApp", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] GroupsListPerUserAllApp(User user) {
            object[] results = this.Invoke("GroupsListPerUserAllApp", new object[] {
                        user});
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void GroupsListPerUserAllAppAsync(User user) {
            this.GroupsListPerUserAllAppAsync(user, null);
        }
        
        /// <remarks/>
        public void GroupsListPerUserAllAppAsync(User user, object userState) {
            if ((this.GroupsListPerUserAllAppOperationCompleted == null)) {
                this.GroupsListPerUserAllAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupsListPerUserAllAppOperationCompleted);
            }
            this.InvokeAsync("GroupsListPerUserAllApp", new object[] {
                        user}, this.GroupsListPerUserAllAppOperationCompleted, userState);
        }
        
        private void OnGroupsListPerUserAllAppOperationCompleted(object arg) {
            if ((this.GroupsListPerUserAllAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupsListPerUserAllAppCompleted(this, new GroupsListPerUserAllAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/GroupPermissionSetItem", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public GroupPermission GroupPermissionSetItem(GroupPermission permission) {
            object[] results = this.Invoke("GroupPermissionSetItem", new object[] {
                        permission});
            return ((GroupPermission)(results[0]));
        }
        
        /// <remarks/>
        public void GroupPermissionSetItemAsync(GroupPermission permission) {
            this.GroupPermissionSetItemAsync(permission, null);
        }
        
        /// <remarks/>
        public void GroupPermissionSetItemAsync(GroupPermission permission, object userState) {
            if ((this.GroupPermissionSetItemOperationCompleted == null)) {
                this.GroupPermissionSetItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupPermissionSetItemOperationCompleted);
            }
            this.InvokeAsync("GroupPermissionSetItem", new object[] {
                        permission}, this.GroupPermissionSetItemOperationCompleted, userState);
        }
        
        private void OnGroupPermissionSetItemOperationCompleted(object arg) {
            if ((this.GroupPermissionSetItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupPermissionSetItemCompleted(this, new GroupPermissionSetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/GroupPermissionRemove", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void GroupPermissionRemove(Group group, Permission perm) {
            this.Invoke("GroupPermissionRemove", new object[] {
                        group,
                        perm});
        }
        
        /// <remarks/>
        public void GroupPermissionRemoveAsync(Group group, Permission perm) {
            this.GroupPermissionRemoveAsync(group, perm, null);
        }
        
        /// <remarks/>
        public void GroupPermissionRemoveAsync(Group group, Permission perm, object userState) {
            if ((this.GroupPermissionRemoveOperationCompleted == null)) {
                this.GroupPermissionRemoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupPermissionRemoveOperationCompleted);
            }
            this.InvokeAsync("GroupPermissionRemove", new object[] {
                        group,
                        perm}, this.GroupPermissionRemoveOperationCompleted, userState);
        }
        
        private void OnGroupPermissionRemoveOperationCompleted(object arg) {
            if ((this.GroupPermissionRemoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupPermissionRemoveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/DelegationSetItem", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Delegation DelegationSetItem(Delegation delegation) {
            object[] results = this.Invoke("DelegationSetItem", new object[] {
                        delegation});
            return ((Delegation)(results[0]));
        }
        
        /// <remarks/>
        public void DelegationSetItemAsync(Delegation delegation) {
            this.DelegationSetItemAsync(delegation, null);
        }
        
        /// <remarks/>
        public void DelegationSetItemAsync(Delegation delegation, object userState) {
            if ((this.DelegationSetItemOperationCompleted == null)) {
                this.DelegationSetItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelegationSetItemOperationCompleted);
            }
            this.InvokeAsync("DelegationSetItem", new object[] {
                        delegation}, this.DelegationSetItemOperationCompleted, userState);
        }
        
        private void OnDelegationSetItemOperationCompleted(object arg) {
            if ((this.DelegationSetItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelegationSetItemCompleted(this, new DelegationSetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/DelegationGetItem", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Delegation DelegationGetItem(int id, int idApplication) {
            object[] results = this.Invoke("DelegationGetItem", new object[] {
                        id,
                        idApplication});
            return ((Delegation)(results[0]));
        }
        
        /// <remarks/>
        public void DelegationGetItemAsync(int id, int idApplication) {
            this.DelegationGetItemAsync(id, idApplication, null);
        }
        
        /// <remarks/>
        public void DelegationGetItemAsync(int id, int idApplication, object userState) {
            if ((this.DelegationGetItemOperationCompleted == null)) {
                this.DelegationGetItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelegationGetItemOperationCompleted);
            }
            this.InvokeAsync("DelegationGetItem", new object[] {
                        id,
                        idApplication}, this.DelegationGetItemOperationCompleted, userState);
        }
        
        private void OnDelegationGetItemOperationCompleted(object arg) {
            if ((this.DelegationGetItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelegationGetItemCompleted(this, new DelegationGetItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/DelegationRemove", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DelegationRemove(Delegation delegation) {
            this.Invoke("DelegationRemove", new object[] {
                        delegation});
        }
        
        /// <remarks/>
        public void DelegationRemoveAsync(Delegation delegation) {
            this.DelegationRemoveAsync(delegation, null);
        }
        
        /// <remarks/>
        public void DelegationRemoveAsync(Delegation delegation, object userState) {
            if ((this.DelegationRemoveOperationCompleted == null)) {
                this.DelegationRemoveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelegationRemoveOperationCompleted);
            }
            this.InvokeAsync("DelegationRemove", new object[] {
                        delegation}, this.DelegationRemoveOperationCompleted, userState);
        }
        
        private void OnDelegationRemoveOperationCompleted(object arg) {
            if ((this.DelegationRemoveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelegationRemoveCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/DelegationList", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Delegation[] DelegationList(Delegation filter, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.DateTime> fecha) {
            object[] results = this.Invoke("DelegationList", new object[] {
                        filter,
                        fecha});
            return ((Delegation[])(results[0]));
        }
        
        /// <remarks/>
        public void DelegationListAsync(Delegation filter, System.Nullable<System.DateTime> fecha) {
            this.DelegationListAsync(filter, fecha, null);
        }
        
        /// <remarks/>
        public void DelegationListAsync(Delegation filter, System.Nullable<System.DateTime> fecha, object userState) {
            if ((this.DelegationListOperationCompleted == null)) {
                this.DelegationListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelegationListOperationCompleted);
            }
            this.InvokeAsync("DelegationList", new object[] {
                        filter,
                        fecha}, this.DelegationListOperationCompleted, userState);
        }
        
        private void OnDelegationListOperationCompleted(object arg) {
            if ((this.DelegationListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelegationListCompleted(this, new DelegationListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/UserListPerGroupOnlyDelegateTod" +
            "ay", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] UserListPerGroupOnlyDelegateToday(Group grupo) {
            object[] results = this.Invoke("UserListPerGroupOnlyDelegateToday", new object[] {
                        grupo});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void UserListPerGroupOnlyDelegateTodayAsync(Group grupo) {
            this.UserListPerGroupOnlyDelegateTodayAsync(grupo, null);
        }
        
        /// <remarks/>
        public void UserListPerGroupOnlyDelegateTodayAsync(Group grupo, object userState) {
            if ((this.UserListPerGroupOnlyDelegateTodayOperationCompleted == null)) {
                this.UserListPerGroupOnlyDelegateTodayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserListPerGroupOnlyDelegateTodayOperationCompleted);
            }
            this.InvokeAsync("UserListPerGroupOnlyDelegateToday", new object[] {
                        grupo}, this.UserListPerGroupOnlyDelegateTodayOperationCompleted, userState);
        }
        
        private void OnUserListPerGroupOnlyDelegateTodayOperationCompleted(object arg) {
            if ((this.UserListPerGroupOnlyDelegateTodayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserListPerGroupOnlyDelegateTodayCompleted(this, new UserListPerGroupOnlyDelegateTodayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/UserListPerGroupOnlyDelegate", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] UserListPerGroupOnlyDelegate(Group grupo, System.DateTime fecha) {
            object[] results = this.Invoke("UserListPerGroupOnlyDelegate", new object[] {
                        grupo,
                        fecha});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void UserListPerGroupOnlyDelegateAsync(Group grupo, System.DateTime fecha) {
            this.UserListPerGroupOnlyDelegateAsync(grupo, fecha, null);
        }
        
        /// <remarks/>
        public void UserListPerGroupOnlyDelegateAsync(Group grupo, System.DateTime fecha, object userState) {
            if ((this.UserListPerGroupOnlyDelegateOperationCompleted == null)) {
                this.UserListPerGroupOnlyDelegateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserListPerGroupOnlyDelegateOperationCompleted);
            }
            this.InvokeAsync("UserListPerGroupOnlyDelegate", new object[] {
                        grupo,
                        fecha}, this.UserListPerGroupOnlyDelegateOperationCompleted, userState);
        }
        
        private void OnUserListPerGroupOnlyDelegateOperationCompleted(object arg) {
            if ((this.UserListPerGroupOnlyDelegateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserListPerGroupOnlyDelegateCompleted(this, new UserListPerGroupOnlyDelegateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/UserIsInDelegateRole", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserIsInDelegateRole(User user, Group grupo, System.DateTime fecha) {
            object[] results = this.Invoke("UserIsInDelegateRole", new object[] {
                        user,
                        grupo,
                        fecha});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserIsInDelegateRoleAsync(User user, Group grupo, System.DateTime fecha) {
            this.UserIsInDelegateRoleAsync(user, grupo, fecha, null);
        }
        
        /// <remarks/>
        public void UserIsInDelegateRoleAsync(User user, Group grupo, System.DateTime fecha, object userState) {
            if ((this.UserIsInDelegateRoleOperationCompleted == null)) {
                this.UserIsInDelegateRoleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserIsInDelegateRoleOperationCompleted);
            }
            this.InvokeAsync("UserIsInDelegateRole", new object[] {
                        user,
                        grupo,
                        fecha}, this.UserIsInDelegateRoleOperationCompleted, userState);
        }
        
        private void OnUserIsInDelegateRoleOperationCompleted(object arg) {
            if ((this.UserIsInDelegateRoleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserIsInDelegateRoleCompleted(this, new UserIsInDelegateRoleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/UserIsInDelegateRoleToday", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UserIsInDelegateRoleToday(User user, Group grupo) {
            object[] results = this.Invoke("UserIsInDelegateRoleToday", new object[] {
                        user,
                        grupo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UserIsInDelegateRoleTodayAsync(User user, Group grupo) {
            this.UserIsInDelegateRoleTodayAsync(user, grupo, null);
        }
        
        /// <remarks/>
        public void UserIsInDelegateRoleTodayAsync(User user, Group grupo, object userState) {
            if ((this.UserIsInDelegateRoleTodayOperationCompleted == null)) {
                this.UserIsInDelegateRoleTodayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserIsInDelegateRoleTodayOperationCompleted);
            }
            this.InvokeAsync("UserIsInDelegateRoleToday", new object[] {
                        user,
                        grupo}, this.UserIsInDelegateRoleTodayOperationCompleted, userState);
        }
        
        private void OnUserIsInDelegateRoleTodayOperationCompleted(object arg) {
            if ((this.UserIsInDelegateRoleTodayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserIsInDelegateRoleTodayCompleted(this, new UserIsInDelegateRoleTodayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/GroupsListPerUserOnlyDelegate", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] GroupsListPerUserOnlyDelegate(User user, System.DateTime fecha, int idApplication) {
            object[] results = this.Invoke("GroupsListPerUserOnlyDelegate", new object[] {
                        user,
                        fecha,
                        idApplication});
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void GroupsListPerUserOnlyDelegateAsync(User user, System.DateTime fecha, int idApplication) {
            this.GroupsListPerUserOnlyDelegateAsync(user, fecha, idApplication, null);
        }
        
        /// <remarks/>
        public void GroupsListPerUserOnlyDelegateAsync(User user, System.DateTime fecha, int idApplication, object userState) {
            if ((this.GroupsListPerUserOnlyDelegateOperationCompleted == null)) {
                this.GroupsListPerUserOnlyDelegateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupsListPerUserOnlyDelegateOperationCompleted);
            }
            this.InvokeAsync("GroupsListPerUserOnlyDelegate", new object[] {
                        user,
                        fecha,
                        idApplication}, this.GroupsListPerUserOnlyDelegateOperationCompleted, userState);
        }
        
        private void OnGroupsListPerUserOnlyDelegateOperationCompleted(object arg) {
            if ((this.GroupsListPerUserOnlyDelegateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupsListPerUserOnlyDelegateCompleted(this, new GroupsListPerUserOnlyDelegateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/GroupsListPerUserOnlyDelegateTo" +
            "day", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] GroupsListPerUserOnlyDelegateToday(User user, int idApplication) {
            object[] results = this.Invoke("GroupsListPerUserOnlyDelegateToday", new object[] {
                        user,
                        idApplication});
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void GroupsListPerUserOnlyDelegateTodayAsync(User user, int idApplication) {
            this.GroupsListPerUserOnlyDelegateTodayAsync(user, idApplication, null);
        }
        
        /// <remarks/>
        public void GroupsListPerUserOnlyDelegateTodayAsync(User user, int idApplication, object userState) {
            if ((this.GroupsListPerUserOnlyDelegateTodayOperationCompleted == null)) {
                this.GroupsListPerUserOnlyDelegateTodayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGroupsListPerUserOnlyDelegateTodayOperationCompleted);
            }
            this.InvokeAsync("GroupsListPerUserOnlyDelegateToday", new object[] {
                        user,
                        idApplication}, this.GroupsListPerUserOnlyDelegateTodayOperationCompleted, userState);
        }
        
        private void OnGroupsListPerUserOnlyDelegateTodayOperationCompleted(object arg) {
            if ((this.GroupsListPerUserOnlyDelegateTodayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GroupsListPerUserOnlyDelegateTodayCompleted(this, new GroupsListPerUserOnlyDelegateTodayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/AllUserListPerGroup", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] AllUserListPerGroup(Group grupo) {
            object[] results = this.Invoke("AllUserListPerGroup", new object[] {
                        grupo});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void AllUserListPerGroupAsync(Group grupo) {
            this.AllUserListPerGroupAsync(grupo, null);
        }
        
        /// <remarks/>
        public void AllUserListPerGroupAsync(Group grupo, object userState) {
            if ((this.AllUserListPerGroupOperationCompleted == null)) {
                this.AllUserListPerGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllUserListPerGroupOperationCompleted);
            }
            this.InvokeAsync("AllUserListPerGroup", new object[] {
                        grupo}, this.AllUserListPerGroupOperationCompleted, userState);
        }
        
        private void OnAllUserListPerGroupOperationCompleted(object arg) {
            if ((this.AllUserListPerGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllUserListPerGroupCompleted(this, new AllUserListPerGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/AllUserListPerGroupAtDate", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public User[] AllUserListPerGroupAtDate(Group grupo, System.DateTime fecha) {
            object[] results = this.Invoke("AllUserListPerGroupAtDate", new object[] {
                        grupo,
                        fecha});
            return ((User[])(results[0]));
        }
        
        /// <remarks/>
        public void AllUserListPerGroupAtDateAsync(Group grupo, System.DateTime fecha) {
            this.AllUserListPerGroupAtDateAsync(grupo, fecha, null);
        }
        
        /// <remarks/>
        public void AllUserListPerGroupAtDateAsync(Group grupo, System.DateTime fecha, object userState) {
            if ((this.AllUserListPerGroupAtDateOperationCompleted == null)) {
                this.AllUserListPerGroupAtDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllUserListPerGroupAtDateOperationCompleted);
            }
            this.InvokeAsync("AllUserListPerGroupAtDate", new object[] {
                        grupo,
                        fecha}, this.AllUserListPerGroupAtDateOperationCompleted, userState);
        }
        
        private void OnAllUserListPerGroupAtDateOperationCompleted(object arg) {
            if ((this.AllUserListPerGroupAtDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllUserListPerGroupAtDateCompleted(this, new AllUserListPerGroupAtDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/IsUserInRol", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserInRol(User user, Group grupo) {
            object[] results = this.Invoke("IsUserInRol", new object[] {
                        user,
                        grupo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserInRolAsync(User user, Group grupo) {
            this.IsUserInRolAsync(user, grupo, null);
        }
        
        /// <remarks/>
        public void IsUserInRolAsync(User user, Group grupo, object userState) {
            if ((this.IsUserInRolOperationCompleted == null)) {
                this.IsUserInRolOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserInRolOperationCompleted);
            }
            this.InvokeAsync("IsUserInRol", new object[] {
                        user,
                        grupo}, this.IsUserInRolOperationCompleted, userState);
        }
        
        private void OnIsUserInRolOperationCompleted(object arg) {
            if ((this.IsUserInRolCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserInRolCompleted(this, new IsUserInRolCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/IsUserInRolAtDate", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserInRolAtDate(User user, Group grupo, System.DateTime fecha) {
            object[] results = this.Invoke("IsUserInRolAtDate", new object[] {
                        user,
                        grupo,
                        fecha});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserInRolAtDateAsync(User user, Group grupo, System.DateTime fecha) {
            this.IsUserInRolAtDateAsync(user, grupo, fecha, null);
        }
        
        /// <remarks/>
        public void IsUserInRolAtDateAsync(User user, Group grupo, System.DateTime fecha, object userState) {
            if ((this.IsUserInRolAtDateOperationCompleted == null)) {
                this.IsUserInRolAtDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserInRolAtDateOperationCompleted);
            }
            this.InvokeAsync("IsUserInRolAtDate", new object[] {
                        user,
                        grupo,
                        fecha}, this.IsUserInRolAtDateOperationCompleted, userState);
        }
        
        private void OnIsUserInRolAtDateOperationCompleted(object arg) {
            if ((this.IsUserInRolAtDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserInRolAtDateCompleted(this, new IsUserInRolAtDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/AllGroupsListPerUser", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] AllGroupsListPerUser(User user, int idApplication) {
            object[] results = this.Invoke("AllGroupsListPerUser", new object[] {
                        user,
                        idApplication});
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void AllGroupsListPerUserAsync(User user, int idApplication) {
            this.AllGroupsListPerUserAsync(user, idApplication, null);
        }
        
        /// <remarks/>
        public void AllGroupsListPerUserAsync(User user, int idApplication, object userState) {
            if ((this.AllGroupsListPerUserOperationCompleted == null)) {
                this.AllGroupsListPerUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllGroupsListPerUserOperationCompleted);
            }
            this.InvokeAsync("AllGroupsListPerUser", new object[] {
                        user,
                        idApplication}, this.AllGroupsListPerUserOperationCompleted, userState);
        }
        
        private void OnAllGroupsListPerUserOperationCompleted(object arg) {
            if ((this.AllGroupsListPerUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllGroupsListPerUserCompleted(this, new AllGroupsListPerUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://framework.irsa.com.ar/WebServices/Security/AllGroupsListPerUserAtDate", RequestNamespace="http://framework.irsa.com.ar/WebServices/Security/", ResponseNamespace="http://framework.irsa.com.ar/WebServices/Security/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Group[] AllGroupsListPerUserAtDate(User user, System.DateTime fecha, int idApplication) {
            object[] results = this.Invoke("AllGroupsListPerUserAtDate", new object[] {
                        user,
                        fecha,
                        idApplication});
            return ((Group[])(results[0]));
        }
        
        /// <remarks/>
        public void AllGroupsListPerUserAtDateAsync(User user, System.DateTime fecha, int idApplication) {
            this.AllGroupsListPerUserAtDateAsync(user, fecha, idApplication, null);
        }
        
        /// <remarks/>
        public void AllGroupsListPerUserAtDateAsync(User user, System.DateTime fecha, int idApplication, object userState) {
            if ((this.AllGroupsListPerUserAtDateOperationCompleted == null)) {
                this.AllGroupsListPerUserAtDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAllGroupsListPerUserAtDateOperationCompleted);
            }
            this.InvokeAsync("AllGroupsListPerUserAtDate", new object[] {
                        user,
                        fecha,
                        idApplication}, this.AllGroupsListPerUserAtDateOperationCompleted, userState);
        }
        
        private void OnAllGroupsListPerUserAtDateOperationCompleted(object arg) {
            if ((this.AllGroupsListPerUserAtDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AllGroupsListPerUserAtDateCompleted(this, new AllGroupsListPerUserAtDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://framework.irsa.com.ar/WebServices/Security/")]
    public partial class Application {
        
        private int idField;
        
        private string nameField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://framework.irsa.com.ar/WebServices/Security/")]
    public partial class UserGroup {
        
        private User userField;
        
        private Group groupField;
        
        /// <remarks/>
        public User User {
            get {
                return this.userField;
            }
            set {
                this.userField = value;
            }
        }
        
        /// <remarks/>
        public Group Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://framework.irsa.com.ar/WebServices/Security/")]
    public partial class User {
        
        private int idField;
        
        private bool onlineField;
        
        private string nombreField;
        
        private string apellidoField;
        
        private string telefonoField;
        
        private string emailField;
        
        private string userNameField;
        
        private int idLanguageField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public bool Online {
            get {
                return this.onlineField;
            }
            set {
                this.onlineField = value;
            }
        }
        
        /// <remarks/>
        public string Nombre {
            get {
                return this.nombreField;
            }
            set {
                this.nombreField = value;
            }
        }
        
        /// <remarks/>
        public string Apellido {
            get {
                return this.apellidoField;
            }
            set {
                this.apellidoField = value;
            }
        }
        
        /// <remarks/>
        public string Telefono {
            get {
                return this.telefonoField;
            }
            set {
                this.telefonoField = value;
            }
        }
        
        /// <remarks/>
        public string Email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        public string UserName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
        
        /// <remarks/>
        public int IdLanguage {
            get {
                return this.idLanguageField;
            }
            set {
                this.idLanguageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://framework.irsa.com.ar/WebServices/Security/")]
    public partial class Group {
        
        private int idField;
        
        private int idApplicationField;
        
        private string nameField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int IdApplication {
            get {
                return this.idApplicationField;
            }
            set {
                this.idApplicationField = value;
            }
        }
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://framework.irsa.com.ar/WebServices/Security/")]
    public partial class Delegation {
        
        private int idField;
        
        private UserGroup userGroupField;
        
        private User delegateUserField;
        
        private System.Nullable<System.DateTime> sinceDateField;
        
        private System.Nullable<System.DateTime> toDateField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public UserGroup UserGroup {
            get {
                return this.userGroupField;
            }
            set {
                this.userGroupField = value;
            }
        }
        
        /// <remarks/>
        public User DelegateUser {
            get {
                return this.delegateUserField;
            }
            set {
                this.delegateUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SinceDate {
            get {
                return this.sinceDateField;
            }
            set {
                this.sinceDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ToDate {
            get {
                return this.toDateField;
            }
            set {
                this.toDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://framework.irsa.com.ar/WebServices/Security/")]
    public partial class GroupPermission {
        
        private Group groupField;
        
        private Permission permissionField;
        
        /// <remarks/>
        public Group Group {
            get {
                return this.groupField;
            }
            set {
                this.groupField = value;
            }
        }
        
        /// <remarks/>
        public Permission Permission {
            get {
                return this.permissionField;
            }
            set {
                this.permissionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://framework.irsa.com.ar/WebServices/Security/")]
    public partial class Permission {
        
        private int idField;
        
        private int idApplicationField;
        
        private string descriptionField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public int IdApplication {
            get {
                return this.idApplicationField;
            }
            set {
                this.idApplicationField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://framework.irsa.com.ar/WebServices/Security/")]
    public partial class KeyValueItem {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(PermissionValue))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://framework.irsa.com.ar/WebServices/Security/")]
    public partial class PermissionParam {
        
        private int idPermissionField;
        
        private int idApplicationField;
        
        private string keyField;
        
        /// <remarks/>
        public int IdPermission {
            get {
                return this.idPermissionField;
            }
            set {
                this.idPermissionField = value;
            }
        }
        
        /// <remarks/>
        public int IdApplication {
            get {
                return this.idApplicationField;
            }
            set {
                this.idApplicationField = value;
            }
        }
        
        /// <remarks/>
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://framework.irsa.com.ar/WebServices/Security/")]
    public partial class PermissionValue : PermissionParam {
        
        private string valueField;
        
        private int idGroupField;
        
        /// <remarks/>
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        public int IdGroup {
            get {
                return this.idGroupField;
            }
            set {
                this.idGroupField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ApplicationGetItemCompletedEventHandler(object sender, ApplicationGetItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplicationGetItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplicationGetItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Application Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Application)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ApplicationListCompletedEventHandler(object sender, ApplicationListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ApplicationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ApplicationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Application[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Application[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserGetItemCompletedEventHandler(object sender, UserGetItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserGetItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserGetItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserListCompletedEventHandler(object sender, UserListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserListPerGroupCompletedEventHandler(object sender, UserListPerGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserListPerGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserListPerGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserListPerPermissionCompletedEventHandler(object sender, UserListPerPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserListPerPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserListPerPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserListPerParameterCompletedEventHandler(object sender, UserListPerParameterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserListPerParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserListPerParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserIsInRoleCompletedEventHandler(object sender, UserIsInRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserIsInRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserIsInRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserLogonCompletedEventHandler(object sender, UserLogonCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserLogonCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserLogonCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserLogonByNameCompletedEventHandler(object sender, UserLogonByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserLogonByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserLogonByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserLogoffCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserCheckPermissionCompletedEventHandler(object sender, UserCheckPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserCheckPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserCheckPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserCheckParameterCompletedEventHandler(object sender, UserCheckParameterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserCheckParameterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserCheckParameterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUsersEmailByRolCompletedEventHandler(object sender, GetUsersEmailByRolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUsersEmailByRolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUsersEmailByRolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PermissionGetItemCompletedEventHandler(object sender, PermissionGetItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PermissionGetItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PermissionGetItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Permission Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Permission)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PermissionListCompletedEventHandler(object sender, PermissionListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PermissionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PermissionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Permission[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Permission[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PermissionListPerGroupCompletedEventHandler(object sender, PermissionListPerGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PermissionListPerGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PermissionListPerGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Permission[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Permission[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PermissionSetItemCompletedEventHandler(object sender, PermissionSetItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PermissionSetItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PermissionSetItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Permission Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Permission)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PermissionRemoveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PermissionParamGetItemCompletedEventHandler(object sender, PermissionParamGetItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PermissionParamGetItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PermissionParamGetItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PermissionParam Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PermissionParam)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PermissionParamListPerPermissionCompletedEventHandler(object sender, PermissionParamListPerPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PermissionParamListPerPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PermissionParamListPerPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PermissionParam[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PermissionParam[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PermissionParamListCompletedEventHandler(object sender, PermissionParamListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PermissionParamListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PermissionParamListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PermissionParam[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PermissionParam[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PermissionParamSetItemCompletedEventHandler(object sender, PermissionParamSetItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PermissionParamSetItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PermissionParamSetItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PermissionParam Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PermissionParam)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PermissionParamSetItemsCompletedEventHandler(object sender, PermissionParamSetItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PermissionParamSetItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PermissionParamSetItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PermissionParam[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PermissionParam[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PermissionParamRemoveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PermissionValueGetItemCompletedEventHandler(object sender, PermissionValueGetItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PermissionValueGetItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PermissionValueGetItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PermissionValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PermissionValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PermissionValueListCompletedEventHandler(object sender, PermissionValueListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PermissionValueListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PermissionValueListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PermissionValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PermissionValue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PermissionValueSetItemCompletedEventHandler(object sender, PermissionValueSetItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PermissionValueSetItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PermissionValueSetItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PermissionValue Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PermissionValue)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PermissionValueSetItemsCompletedEventHandler(object sender, PermissionValueSetItemsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PermissionValueSetItemsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PermissionValueSetItemsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PermissionValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PermissionValue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PermissionValueRemoveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ListCompletedEventHandler(object sender, ListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PermissionValue[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PermissionValue[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GroupGetItemCompletedEventHandler(object sender, GroupGetItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupGetItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupGetItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GroupListCompletedEventHandler(object sender, GroupListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GroupsListPerPermissionCompletedEventHandler(object sender, GroupsListPerPermissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupsListPerPermissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupsListPerPermissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GroupsListPerUserCompletedEventHandler(object sender, GroupsListPerUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupsListPerUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupsListPerUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GroupsListPerUserAllAppCompletedEventHandler(object sender, GroupsListPerUserAllAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupsListPerUserAllAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupsListPerUserAllAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GroupPermissionSetItemCompletedEventHandler(object sender, GroupPermissionSetItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupPermissionSetItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupPermissionSetItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public GroupPermission Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GroupPermission)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GroupPermissionRemoveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DelegationSetItemCompletedEventHandler(object sender, DelegationSetItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelegationSetItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelegationSetItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Delegation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Delegation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DelegationGetItemCompletedEventHandler(object sender, DelegationGetItemCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelegationGetItemCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelegationGetItemCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Delegation Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Delegation)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DelegationRemoveCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DelegationListCompletedEventHandler(object sender, DelegationListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelegationListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelegationListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Delegation[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Delegation[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserListPerGroupOnlyDelegateTodayCompletedEventHandler(object sender, UserListPerGroupOnlyDelegateTodayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserListPerGroupOnlyDelegateTodayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserListPerGroupOnlyDelegateTodayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserListPerGroupOnlyDelegateCompletedEventHandler(object sender, UserListPerGroupOnlyDelegateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserListPerGroupOnlyDelegateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserListPerGroupOnlyDelegateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserIsInDelegateRoleCompletedEventHandler(object sender, UserIsInDelegateRoleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserIsInDelegateRoleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserIsInDelegateRoleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UserIsInDelegateRoleTodayCompletedEventHandler(object sender, UserIsInDelegateRoleTodayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserIsInDelegateRoleTodayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserIsInDelegateRoleTodayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GroupsListPerUserOnlyDelegateCompletedEventHandler(object sender, GroupsListPerUserOnlyDelegateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupsListPerUserOnlyDelegateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupsListPerUserOnlyDelegateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GroupsListPerUserOnlyDelegateTodayCompletedEventHandler(object sender, GroupsListPerUserOnlyDelegateTodayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GroupsListPerUserOnlyDelegateTodayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GroupsListPerUserOnlyDelegateTodayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AllUserListPerGroupCompletedEventHandler(object sender, AllUserListPerGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllUserListPerGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllUserListPerGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AllUserListPerGroupAtDateCompletedEventHandler(object sender, AllUserListPerGroupAtDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllUserListPerGroupAtDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllUserListPerGroupAtDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public User[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((User[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsUserInRolCompletedEventHandler(object sender, IsUserInRolCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserInRolCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserInRolCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsUserInRolAtDateCompletedEventHandler(object sender, IsUserInRolAtDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserInRolAtDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserInRolAtDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AllGroupsListPerUserCompletedEventHandler(object sender, AllGroupsListPerUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllGroupsListPerUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllGroupsListPerUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AllGroupsListPerUserAtDateCompletedEventHandler(object sender, AllGroupsListPerUserAtDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AllGroupsListPerUserAtDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AllGroupsListPerUserAtDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Group[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Group[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591