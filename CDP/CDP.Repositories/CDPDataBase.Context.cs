//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CDP.Repositories
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CDPStrings : DbContext
    {
        public CDPStrings()
            : base("name=CDPStrings")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AfipAuth> AfipAuth { get; set; }
        public virtual DbSet<c1116a> c1116a { get; set; }
        public virtual DbSet<c1116aDetalle> c1116aDetalle { get; set; }
        public virtual DbSet<CartaDePorte1116A> CartaDePorte1116A { get; set; }
        public virtual DbSet<CartasDePorte> CartasDePorte { get; set; }
        public virtual DbSet<Chofer> Chofer { get; set; }
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<Cosecha> Cosecha { get; set; }
        public virtual DbSet<Empresa> Empresa { get; set; }
        public virtual DbSet<Especie> Especie { get; set; }
        public virtual DbSet<Establecimiento> Establecimiento { get; set; }
        public virtual DbSet<Grano> Grano { get; set; }
        public virtual DbSet<GrupoEmpresa> GrupoEmpresa { get; set; }
        public virtual DbSet<logInterfaz> logInterfaz { get; set; }
        public virtual DbSet<LogOperaciones> LogOperaciones { get; set; }
        public virtual DbSet<LogSap> LogSap { get; set; }
        public virtual DbSet<LoteCartasDePorte> LoteCartasDePorte { get; set; }
        public virtual DbSet<Pais> Pais { get; set; }
        public virtual DbSet<Proveedor> Proveedor { get; set; }
        public virtual DbSet<Solicitudes> Solicitudes { get; set; }
        public virtual DbSet<SolicitudesRecibidas> SolicitudesRecibidas { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<TipoDeCarta> TipoDeCarta { get; set; }
        public virtual DbSet<TipoDocumentoSAP> TipoDocumentoSAP { get; set; }
        public virtual DbSet<TipoEspecie> TipoEspecie { get; set; }
        public virtual DbSet<TipoGrano> TipoGrano { get; set; }
        public virtual DbSet<AfipAuth_bkp> AfipAuth_bkp { get; set; }
        public virtual DbSet<logsolicitudes> logsolicitudes { get; set; }
        public virtual DbSet<proveedor_tmp> proveedor_tmp { get; set; }
        public virtual DbSet<Provincia> Provincia { get; set; }
        public virtual DbSet<sol2tmp> sol2tmp { get; set; }
        public virtual DbSet<vChoferes> vChoferes { get; set; }
        public virtual DbSet<vClienteCorredor> vClienteCorredor { get; set; }
        public virtual DbSet<vClienteDestinatario> vClienteDestinatario { get; set; }
        public virtual DbSet<vClienteDestinatarioCambio> vClienteDestinatarioCambio { get; set; }
        public virtual DbSet<vClienteDestino> vClienteDestino { get; set; }
        public virtual DbSet<vClienteEntregador> vClienteEntregador { get; set; }
        public virtual DbSet<vClienteIntermediario> vClienteIntermediario { get; set; }
        public virtual DbSet<vClientePagadorDelFlete> vClientePagadorDelFlete { get; set; }
        public virtual DbSet<vClienteRemitenteComercial> vClienteRemitenteComercial { get; set; }
        public virtual DbSet<vClientes> vClientes { get; set; }
        public virtual DbSet<vCosecha> vCosecha { get; set; }
        public virtual DbSet<vEspecie> vEspecie { get; set; }
        public virtual DbSet<vEstablecimientoDestino> vEstablecimientoDestino { get; set; }
        public virtual DbSet<vEstablecimientoOrigen> vEstablecimientoOrigen { get; set; }
        public virtual DbSet<vGranoCosecha> vGranoCosecha { get; set; }
        public virtual DbSet<vRemitoParaguay> vRemitoParaguay { get; set; }
        public virtual DbSet<vReporteCDP> vReporteCDP { get; set; }
    
        public virtual ObjectResult<string> AnularReservaCartaDePorte(string nroCartaDePorte, string usuarioReserva, Nullable<int> idGrupoEmpresa, Nullable<int> idEmpresa)
        {
            var nroCartaDePorteParameter = nroCartaDePorte != null ?
                new ObjectParameter("nroCartaDePorte", nroCartaDePorte) :
                new ObjectParameter("nroCartaDePorte", typeof(string));
    
            var usuarioReservaParameter = usuarioReserva != null ?
                new ObjectParameter("UsuarioReserva", usuarioReserva) :
                new ObjectParameter("UsuarioReserva", typeof(string));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("AnularReservaCartaDePorte", nroCartaDePorteParameter, usuarioReservaParameter, idGrupoEmpresaParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<string> CancelarReservaCartaDePorte(string nroCartaDePorte, string usuarioReserva, Nullable<int> idGrupoEmpresa, Nullable<int> idEmpresa)
        {
            var nroCartaDePorteParameter = nroCartaDePorte != null ?
                new ObjectParameter("nroCartaDePorte", nroCartaDePorte) :
                new ObjectParameter("nroCartaDePorte", typeof(string));
    
            var usuarioReservaParameter = usuarioReserva != null ?
                new ObjectParameter("UsuarioReserva", usuarioReserva) :
                new ObjectParameter("UsuarioReserva", typeof(string));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CancelarReservaCartaDePorte", nroCartaDePorteParameter, usuarioReservaParameter, idGrupoEmpresaParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CantidadCartasDePorteDisponibles(Nullable<int> idGrupoEmpresa)
        {
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CantidadCartasDePorteDisponibles", idGrupoEmpresaParameter);
        }
    
        public virtual int DeleteC1116ADetalle(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteC1116ADetalle", idParameter);
        }
    
        public virtual int Eliminar1116A(Nullable<int> id, string usuario)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Eliminar1116A", idParameter, usuarioParameter);
        }
    
        public virtual int EliminarCartasDePorte(Nullable<int> idLoteCartasDePorte, string usuario)
        {
            var idLoteCartasDePorteParameter = idLoteCartasDePorte.HasValue ?
                new ObjectParameter("IdLoteCartasDePorte", idLoteCartasDePorte) :
                new ObjectParameter("IdLoteCartasDePorte", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarCartasDePorte", idLoteCartasDePorteParameter, usuarioParameter);
        }
    
        public virtual int EliminarCartasDePorteDisponibles(Nullable<int> idLoteCartasDePorte, string usuario)
        {
            var idLoteCartasDePorteParameter = idLoteCartasDePorte.HasValue ?
                new ObjectParameter("IdLoteCartasDePorte", idLoteCartasDePorte) :
                new ObjectParameter("IdLoteCartasDePorte", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarCartasDePorteDisponibles", idLoteCartasDePorteParameter, usuarioParameter);
        }
    
        public virtual int EliminarChofer(Nullable<int> idChofer, string usuario)
        {
            var idChoferParameter = idChofer.HasValue ?
                new ObjectParameter("IdChofer", idChofer) :
                new ObjectParameter("IdChofer", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarChofer", idChoferParameter, usuarioParameter);
        }
    
        public virtual int EliminarEstablecimiento(Nullable<int> idEstablecimiento, string usuario)
        {
            var idEstablecimientoParameter = idEstablecimiento.HasValue ?
                new ObjectParameter("IdEstablecimiento", idEstablecimiento) :
                new ObjectParameter("IdEstablecimiento", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarEstablecimiento", idEstablecimientoParameter, usuarioParameter);
        }
    
        public virtual int EliminarGrano(Nullable<int> idGrano, string usuario)
        {
            var idGranoParameter = idGrano.HasValue ?
                new ObjectParameter("IdGrano", idGrano) :
                new ObjectParameter("IdGrano", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarGrano", idGranoParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<GetAfipAuth_Result> GetAfipAuth(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAfipAuth_Result>("GetAfipAuth", idParameter);
        }
    
        public virtual ObjectResult<GetC1116A_Result> GetC1116A(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetC1116A_Result>("GetC1116A", idParameter);
        }
    
        public virtual ObjectResult<GetC1116AByCertificado_Result> GetC1116AByCertificado(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetC1116AByCertificado_Result>("GetC1116AByCertificado", idParameter);
        }
    
        public virtual int GetC1116AByFiltro(string texto)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetC1116AByFiltro", textoParameter);
        }
    
        public virtual ObjectResult<GetC1116ADetalle_Result> GetC1116ADetalle(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetC1116ADetalle_Result>("GetC1116ADetalle", idParameter);
        }
    
        public virtual ObjectResult<GetCambiosEstados_Result> GetCambiosEstados(string cdp)
        {
            var cdpParameter = cdp != null ?
                new ObjectParameter("cdp", cdp) :
                new ObjectParameter("cdp", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCambiosEstados_Result>("GetCambiosEstados", cdpParameter);
        }
    
        public virtual ObjectResult<GetCartaDePorteDisponible_Result> GetCartaDePorteDisponible(Nullable<int> idEstablecimiento, Nullable<int> idGrupoEmpresa)
        {
            var idEstablecimientoParameter = idEstablecimiento.HasValue ?
                new ObjectParameter("idEstablecimiento", idEstablecimiento) :
                new ObjectParameter("idEstablecimiento", typeof(int));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCartaDePorteDisponible_Result>("GetCartaDePorteDisponible", idEstablecimientoParameter, idGrupoEmpresaParameter);
        }
    
        public virtual ObjectResult<GetCartasDePorte_Result> GetCartasDePorte(Nullable<int> id, Nullable<int> idGrupoEmpresa)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCartasDePorte_Result>("GetCartasDePorte", idParameter, idGrupoEmpresaParameter);
        }
    
        public virtual ObjectResult<GetChofer_Result> GetChofer(Nullable<int> id, Nullable<int> idGrupoEmpresa)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetChofer_Result>("GetChofer", idParameter, idGrupoEmpresaParameter);
        }
    
        public virtual ObjectResult<GetChoferByCuit_Result> GetChoferByCuit(string cuit, Nullable<int> idGrupoEmpresa)
        {
            var cuitParameter = cuit != null ?
                new ObjectParameter("Cuit", cuit) :
                new ObjectParameter("Cuit", typeof(string));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetChoferByCuit_Result>("GetChoferByCuit", cuitParameter, idGrupoEmpresaParameter);
        }
    
        public virtual int GetChoferFiltro(string texto, Nullable<int> idGrupoEmpresa)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetChoferFiltro", textoParameter, idGrupoEmpresaParameter);
        }
    
        public virtual ObjectResult<GetChoferUsadas_Result> GetChoferUsadas(Nullable<int> idGrupoEmpresa)
        {
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetChoferUsadas_Result>("GetChoferUsadas", idGrupoEmpresaParameter);
        }
    
        public virtual ObjectResult<GetCliente_Result> GetCliente(Nullable<int> id, Nullable<int> idEmpresa)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCliente_Result>("GetCliente", idParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetClienteByCuit_Result> GetClienteByCuit(string texto, Nullable<int> idEmpresa)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClienteByCuit_Result>("GetClienteByCuit", textoParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetClienteByOrganizacionVenta_Result> GetClienteByOrganizacionVenta(Nullable<int> idSapOrganizacionDeVenta)
        {
            var idSapOrganizacionDeVentaParameter = idSapOrganizacionDeVenta.HasValue ?
                new ObjectParameter("IdSapOrganizacionDeVenta", idSapOrganizacionDeVenta) :
                new ObjectParameter("IdSapOrganizacionDeVenta", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClienteByOrganizacionVenta_Result>("GetClienteByOrganizacionVenta", idSapOrganizacionDeVentaParameter);
        }
    
        public virtual ObjectResult<GetClienteBySAPID_Result> GetClienteBySAPID(string id, string idOrganizacionDeVenta)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var idOrganizacionDeVentaParameter = idOrganizacionDeVenta != null ?
                new ObjectParameter("IdOrganizacionDeVenta", idOrganizacionDeVenta) :
                new ObjectParameter("IdOrganizacionDeVenta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClienteBySAPID_Result>("GetClienteBySAPID", idParameter, idOrganizacionDeVentaParameter);
        }
    
        public virtual ObjectResult<GetClienteCorredorUsadas_Result> GetClienteCorredorUsadas(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClienteCorredorUsadas_Result>("GetClienteCorredorUsadas", idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetClienteDestinatarioUsadas_Result> GetClienteDestinatarioUsadas(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClienteDestinatarioUsadas_Result>("GetClienteDestinatarioUsadas", idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetClienteDestinoUsadas_Result> GetClienteDestinoUsadas(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClienteDestinoUsadas_Result>("GetClienteDestinoUsadas", idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetClienteEntregadorUsadas_Result> GetClienteEntregadorUsadas(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClienteEntregadorUsadas_Result>("GetClienteEntregadorUsadas", idEmpresaParameter);
        }
    
        public virtual int GetClienteFiltro(string texto, Nullable<int> idEmpresa)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetClienteFiltro", textoParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetClienteIntermediarioUsadas_Result> GetClienteIntermediarioUsadas(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClienteIntermediarioUsadas_Result>("GetClienteIntermediarioUsadas", idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetClientePagadorDelFleteUsadas_Result> GetClientePagadorDelFleteUsadas(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClientePagadorDelFleteUsadas_Result>("GetClientePagadorDelFleteUsadas", idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetClienteRemitenteComercialUsadas_Result> GetClienteRemitenteComercialUsadas(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetClienteRemitenteComercialUsadas_Result>("GetClienteRemitenteComercialUsadas", idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetCosecha_Result> GetCosecha(Nullable<int> id, Nullable<int> idGrupoEmpresa)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCosecha_Result>("GetCosecha", idParameter, idGrupoEmpresaParameter);
        }
    
        public virtual ObjectResult<GetCosechaByCodigo_Result> GetCosechaByCodigo(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetCosechaByCodigo_Result>("GetCosechaByCodigo", idParameter);
        }
    
        public virtual int GetCuitAutoComplete(string campo, string texto, Nullable<int> idEmpresa)
        {
            var campoParameter = campo != null ?
                new ObjectParameter("campo", campo) :
                new ObjectParameter("campo", typeof(string));
    
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCuitAutoComplete", campoParameter, textoParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetDisponiblePorLote(Nullable<int> idLote)
        {
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("idLote", idLote) :
                new ObjectParameter("idLote", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetDisponiblePorLote", idLoteParameter);
        }
    
        public virtual ObjectResult<GetEmpresa_Result> GetEmpresa(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpresa_Result>("GetEmpresa", idParameter);
        }
    
        public virtual ObjectResult<GetEmpresaAdmin_Result> GetEmpresaAdmin(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpresaAdmin_Result>("GetEmpresaAdmin", idParameter);
        }
    
        public virtual ObjectResult<GetEmpresaByGrupoEmpresa_Result> GetEmpresaByGrupoEmpresa(Nullable<int> idGrupoEmpresa)
        {
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpresaByGrupoEmpresa_Result>("GetEmpresaByGrupoEmpresa", idGrupoEmpresaParameter);
        }
    
        public virtual ObjectResult<GetEmpresaByIDCliente_Result> GetEmpresaByIDCliente(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpresaByIDCliente_Result>("GetEmpresaByIDCliente", idParameter);
        }
    
        public virtual ObjectResult<GetEmpresaBySap_Id_Result> GetEmpresaBySap_Id(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEmpresaBySap_Id_Result>("GetEmpresaBySap_Id", idParameter);
        }
    
        public virtual int GetEmpresaFiltro(string texto)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetEmpresaFiltro", textoParameter);
        }
    
        public virtual int GetEmpresaRemitenteComercialUsadas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetEmpresaRemitenteComercialUsadas");
        }
    
        public virtual int GetEmpresaTitularCartaDePorteUsadas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetEmpresaTitularCartaDePorteUsadas");
        }
    
        public virtual ObjectResult<GetEspecie_Result> GetEspecie(Nullable<int> id, Nullable<int> idGrupoEmpresa)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEspecie_Result>("GetEspecie", idParameter, idGrupoEmpresaParameter);
        }
    
        public virtual ObjectResult<GetEstablecimiento_Result> GetEstablecimiento(Nullable<int> id, Nullable<int> idEmpresa)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEstablecimiento_Result>("GetEstablecimiento", idParameter, idEmpresaParameter);
        }
    
        public virtual int GetEstablecimientoFiltro(string texto, Nullable<int> idEmpresa)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetEstablecimientoFiltro", textoParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetEstablecimientoOrigenDestino_Result> GetEstablecimientoOrigenDestino(Nullable<int> origen, Nullable<int> idEmpresa)
        {
            var origenParameter = origen.HasValue ?
                new ObjectParameter("Origen", origen) :
                new ObjectParameter("Origen", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEstablecimientoOrigenDestino_Result>("GetEstablecimientoOrigenDestino", origenParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetGrano_Result> GetGrano(Nullable<int> id, Nullable<int> idGrupoEmpresa)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGrano_Result>("GetGrano", idParameter, idGrupoEmpresaParameter);
        }
    
        public virtual int GetGranoFiltro(string texto, Nullable<int> idGrupoEmpresa)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetGranoFiltro", textoParameter, idGrupoEmpresaParameter);
        }
    
        public virtual ObjectResult<GetGrupoEmpresa_Result> GetGrupoEmpresa(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGrupoEmpresa_Result>("GetGrupoEmpresa", idParameter);
        }
    
        public virtual int GetGrupoEmpresa_Empresa(string condicion)
        {
            var condicionParameter = condicion != null ?
                new ObjectParameter("condicion", condicion) :
                new ObjectParameter("condicion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetGrupoEmpresa_Empresa", condicionParameter);
        }
    
        public virtual ObjectResult<GetGrupoEmpresaByDescripcion_Result> GetGrupoEmpresaByDescripcion(string descripcion)
        {
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetGrupoEmpresaByDescripcion_Result>("GetGrupoEmpresaByDescripcion", descripcionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> getIdClienteProspecto(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getIdClienteProspecto", idEmpresaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> getIdSapProveedorProspecto(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("getIdSapProveedorProspecto", idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetLocalidad_Result> GetLocalidad(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLocalidad_Result>("GetLocalidad", idParameter);
        }
    
        public virtual ObjectResult<GetLocalidadByFiltro_Result> GetLocalidadByFiltro(string filtro)
        {
            var filtroParameter = filtro != null ?
                new ObjectParameter("filtro", filtro) :
                new ObjectParameter("filtro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLocalidadByFiltro_Result>("GetLocalidadByFiltro", filtroParameter);
        }
    
        public virtual ObjectResult<GetLocalidadByIDProvincia_Result> GetLocalidadByIDProvincia(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLocalidadByIDProvincia_Result>("GetLocalidadByIDProvincia", idParameter);
        }
    
        public virtual ObjectResult<GetLocalidadByText_Result> GetLocalidadByText(string filtro)
        {
            var filtroParameter = filtro != null ?
                new ObjectParameter("filtro", filtro) :
                new ObjectParameter("filtro", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLocalidadByText_Result>("GetLocalidadByText", filtroParameter);
        }
    
        public virtual ObjectResult<GetLogSap_Result> GetLogSap(string cartaDePorte)
        {
            var cartaDePorteParameter = cartaDePorte != null ?
                new ObjectParameter("cartaDePorte", cartaDePorte) :
                new ObjectParameter("cartaDePorte", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLogSap_Result>("GetLogSap", cartaDePorteParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetLogSapUltimoNroEnvio(string cartaDePorte)
        {
            var cartaDePorteParameter = cartaDePorte != null ?
                new ObjectParameter("cartaDePorte", cartaDePorte) :
                new ObjectParameter("cartaDePorte", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetLogSapUltimoNroEnvio", cartaDePorteParameter);
        }
    
        public virtual ObjectResult<GetLoteCartasDePorte_Result> GetLoteCartasDePorte(Nullable<int> idGrupoEmpresa)
        {
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLoteCartasDePorte_Result>("GetLoteCartasDePorte", idGrupoEmpresaParameter);
        }
    
        public virtual int GetLoteCartasDePorteFiltro(Nullable<int> loteDesde, Nullable<int> tieneDisponible, Nullable<int> idGrupoEmpresa)
        {
            var loteDesdeParameter = loteDesde.HasValue ?
                new ObjectParameter("loteDesde", loteDesde) :
                new ObjectParameter("loteDesde", typeof(int));
    
            var tieneDisponibleParameter = tieneDisponible.HasValue ?
                new ObjectParameter("tieneDisponible", tieneDisponible) :
                new ObjectParameter("tieneDisponible", typeof(int));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetLoteCartasDePorteFiltro", loteDesdeParameter, tieneDisponibleParameter, idGrupoEmpresaParameter);
        }
    
        public virtual ObjectResult<GetLoteCartasDePorteReporte_Result> GetLoteCartasDePorteReporte(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLoteCartasDePorteReporte_Result>("GetLoteCartasDePorteReporte", fechaDesdeParameter, fechaHastaParameter);
        }
    
        public virtual ObjectResult<GetMisReservas_Result> GetMisReservas(string usuarioReserva, Nullable<int> idGrupoEmpresa, Nullable<int> idEmpresa)
        {
            var usuarioReservaParameter = usuarioReserva != null ?
                new ObjectParameter("UsuarioReserva", usuarioReserva) :
                new ObjectParameter("UsuarioReserva", typeof(string));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMisReservas_Result>("GetMisReservas", usuarioReservaParameter, idGrupoEmpresaParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetOneByCodigo_Result> GetOneByCodigo(Nullable<int> id, Nullable<int> idGrupoEmpresa)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOneByCodigo_Result>("GetOneByCodigo", idParameter, idGrupoEmpresaParameter);
        }
    
        public virtual ObjectResult<GetPais_Result> GetPais(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPais_Result>("GetPais", idParameter);
        }
    
        public virtual ObjectResult<GetProveedor_Result> GetProveedor(Nullable<int> id, Nullable<int> idEmpresa)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProveedor_Result>("GetProveedor", idParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetProveedorByCuitOrgSAPID_Result> GetProveedorByCuitOrgSAPID(string cUIT)
        {
            var cUITParameter = cUIT != null ?
                new ObjectParameter("CUIT", cUIT) :
                new ObjectParameter("CUIT", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProveedorByCuitOrgSAPID_Result>("GetProveedorByCuitOrgSAPID", cUITParameter);
        }
    
        public virtual ObjectResult<GetProveedorByNumeroDocumento_Result> GetProveedorByNumeroDocumento(string texto, Nullable<int> idEmpresa)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProveedorByNumeroDocumento_Result>("GetProveedorByNumeroDocumento", textoParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetProveedorBySAPID_Result> GetProveedorBySAPID(string id, string idOrganizacionDeVenta)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            var idOrganizacionDeVentaParameter = idOrganizacionDeVenta != null ?
                new ObjectParameter("IdOrganizacionDeVenta", idOrganizacionDeVenta) :
                new ObjectParameter("IdOrganizacionDeVenta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProveedorBySAPID_Result>("GetProveedorBySAPID", idParameter, idOrganizacionDeVentaParameter);
        }
    
        public virtual int GetProveedorFiltro(string texto, Nullable<int> idEmpresa)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetProveedorFiltro", textoParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetProveedorInterfaz_Result> GetProveedorInterfaz(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProveedorInterfaz_Result>("GetProveedorInterfaz", idParameter);
        }
    
        public virtual ObjectResult<GetProveedorTitularCartaDePorteUsadas_Result> GetProveedorTitularCartaDePorteUsadas(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProveedorTitularCartaDePorteUsadas_Result>("GetProveedorTitularCartaDePorteUsadas", idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetProveedorTransportistaUsadas_Result> GetProveedorTransportistaUsadas(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProveedorTransportistaUsadas_Result>("GetProveedorTransportistaUsadas", idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetProvincia_Result> GetProvincia(Nullable<int> id, Nullable<int> idPais)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idPaisParameter = idPais.HasValue ?
                new ObjectParameter("IdPais", idPais) :
                new ObjectParameter("IdPais", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProvincia_Result>("GetProvincia", idParameter, idPaisParameter);
        }
    
        public virtual ObjectResult<GetSolicitud_Result> GetSolicitud(Nullable<int> id, Nullable<int> idEmpresa)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSolicitud_Result>("GetSolicitud", idParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetSolicitudAnulacionSAP_Result> GetSolicitudAnulacionSAP(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSolicitudAnulacionSAP_Result>("GetSolicitudAnulacionSAP", idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetSolicitudByCDP_Result> GetSolicitudByCDP(string numeroCartaDePorte)
        {
            var numeroCartaDePorteParameter = numeroCartaDePorte != null ?
                new ObjectParameter("NumeroCartaDePorte", numeroCartaDePorte) :
                new ObjectParameter("NumeroCartaDePorte", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSolicitudByCDP_Result>("GetSolicitudByCDP", numeroCartaDePorteParameter);
        }
    
        public virtual ObjectResult<GetSolicitudByCTG_Result> GetSolicitudByCTG(string numeroCTG, Nullable<int> idEmpresa)
        {
            var numeroCTGParameter = numeroCTG != null ?
                new ObjectParameter("NumeroCTG", numeroCTG) :
                new ObjectParameter("NumeroCTG", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSolicitudByCTG_Result>("GetSolicitudByCTG", numeroCTGParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetSolicitudByEmpresa_Result> GetSolicitudByEmpresa(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSolicitudByEmpresa_Result>("GetSolicitudByEmpresa", idEmpresaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetSolicitudByEmpresaCount(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetSolicitudByEmpresaCount", idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetSolicitudEnvioSAP_Result> GetSolicitudEnvioSAP(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSolicitudEnvioSAP_Result>("GetSolicitudEnvioSAP", idEmpresaParameter);
        }
    
        public virtual int GetSolicitudFiltro(string texto, string estadoAFIP, string estadoSAP, Nullable<int> idEmpresa)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var estadoAFIPParameter = estadoAFIP != null ?
                new ObjectParameter("estadoAFIP", estadoAFIP) :
                new ObjectParameter("estadoAFIP", typeof(string));
    
            var estadoSAPParameter = estadoSAP != null ?
                new ObjectParameter("estadoSAP", estadoSAP) :
                new ObjectParameter("estadoSAP", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSolicitudFiltro", textoParameter, estadoAFIPParameter, estadoSAPParameter, idEmpresaParameter);
        }
    
        public virtual int GetSolicitudFiltroConfirmacion(string texto, Nullable<int> idEmpresa)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSolicitudFiltroConfirmacion", textoParameter, idEmpresaParameter);
        }
    
        public virtual int GetSolicitudMeFiltro(string texto, string estadoAFIP, string estadoSAP)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var estadoAFIPParameter = estadoAFIP != null ?
                new ObjectParameter("estadoAFIP", estadoAFIP) :
                new ObjectParameter("estadoAFIP", typeof(string));
    
            var estadoSAPParameter = estadoSAP != null ?
                new ObjectParameter("estadoSAP", estadoSAP) :
                new ObjectParameter("estadoSAP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSolicitudMeFiltro", textoParameter, estadoAFIPParameter, estadoSAPParameter);
        }
    
        public virtual ObjectResult<GetSolicitudRecibida_Result> GetSolicitudRecibida(Nullable<int> id, Nullable<int> idEmpresa)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSolicitudRecibida_Result>("GetSolicitudRecibida", idParameter, idEmpresaParameter);
        }
    
        public virtual int GetSolicitudRecibidaFiltro(string texto, Nullable<int> idEmpresa)
        {
            var textoParameter = texto != null ?
                new ObjectParameter("texto", texto) :
                new ObjectParameter("texto", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSolicitudRecibidaFiltro", textoParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetSolicitudReporte_Result> GetSolicitudReporte(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idEmpresa)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSolicitudReporte_Result>("GetSolicitudReporte", fechaDesdeParameter, fechaHastaParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetSolicitudReporte1116A_Result> GetSolicitudReporte1116A(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> modoFecha, Nullable<int> idEmpresa)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var modoFechaParameter = modoFecha.HasValue ?
                new ObjectParameter("ModoFecha", modoFecha) :
                new ObjectParameter("ModoFecha", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSolicitudReporte1116A_Result>("GetSolicitudReporte1116A", fechaDesdeParameter, fechaHastaParameter, modoFechaParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetSolicitudReporteEmitidas_Result> GetSolicitudReporteEmitidas(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idEmpresa)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSolicitudReporteEmitidas_Result>("GetSolicitudReporteEmitidas", fechaDesdeParameter, fechaHastaParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetSolicitudReporteGrafico_Result> GetSolicitudReporteGrafico(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idEmpresa)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSolicitudReporteGrafico_Result>("GetSolicitudReporteGrafico", fechaDesdeParameter, fechaHastaParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetSolicitudReporteGraficoNotIn_Result> GetSolicitudReporteGraficoNotIn(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idEmpresa)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSolicitudReporteGraficoNotIn_Result>("GetSolicitudReporteGraficoNotIn", fechaDesdeParameter, fechaHastaParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetSolicitudReporteRecibidas_Result> GetSolicitudReporteRecibidas(Nullable<System.DateTime> fechaDesde, Nullable<System.DateTime> fechaHasta, Nullable<int> idEmpresa)
        {
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var fechaHastaParameter = fechaHasta.HasValue ?
                new ObjectParameter("FechaHasta", fechaHasta) :
                new ObjectParameter("FechaHasta", typeof(System.DateTime));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSolicitudReporteRecibidas_Result>("GetSolicitudReporteRecibidas", fechaDesdeParameter, fechaHastaParameter, idEmpresaParameter);
        }
    
        public virtual int GetSolicitudTop(Nullable<int> top, Nullable<int> idEmpresa)
        {
            var topParameter = top.HasValue ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetSolicitudTop", topParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetSolicitudTopConfirmacion_Result> GetSolicitudTopConfirmacion(Nullable<int> idEmpresa)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSolicitudTopConfirmacion_Result>("GetSolicitudTopConfirmacion", idEmpresaParameter);
        }
    
        public virtual ObjectResult<GetSox1116A_Result> GetSox1116A(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSox1116A_Result>("GetSox1116A", idParameter);
        }
    
        public virtual ObjectResult<GetSox1116AByIdSolicitud_Result> GetSox1116AByIdSolicitud(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSox1116AByIdSolicitud_Result>("GetSox1116AByIdSolicitud", idParameter);
        }
    
        public virtual ObjectResult<GetTipoDeCarta_Result> GetTipoDeCarta(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTipoDeCarta_Result>("GetTipoDeCarta", idParameter);
        }
    
        public virtual ObjectResult<GetTipoDocumentoSAP_Result> GetTipoDocumentoSAP(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTipoDocumentoSAP_Result>("GetTipoDocumentoSAP", idParameter);
        }
    
        public virtual ObjectResult<GetTipoGrano_Result> GetTipoGrano(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTipoGrano_Result>("GetTipoGrano", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetUtilizadoPorLote(Nullable<int> idLote)
        {
            var idLoteParameter = idLote.HasValue ?
                new ObjectParameter("idLote", idLote) :
                new ObjectParameter("idLote", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetUtilizadoPorLote", idLoteParameter);
        }
    
        public virtual int GuardarAfipAuth(string token, string sign, Nullable<System.DateTime> generationTime, Nullable<System.DateTime> expirationTime, string service, string uniqueID)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            var signParameter = sign != null ?
                new ObjectParameter("Sign", sign) :
                new ObjectParameter("Sign", typeof(string));
    
            var generationTimeParameter = generationTime.HasValue ?
                new ObjectParameter("GenerationTime", generationTime) :
                new ObjectParameter("GenerationTime", typeof(System.DateTime));
    
            var expirationTimeParameter = expirationTime.HasValue ?
                new ObjectParameter("ExpirationTime", expirationTime) :
                new ObjectParameter("ExpirationTime", typeof(System.DateTime));
    
            var serviceParameter = service != null ?
                new ObjectParameter("Service", service) :
                new ObjectParameter("Service", typeof(string));
    
            var uniqueIDParameter = uniqueID != null ?
                new ObjectParameter("UniqueID", uniqueID) :
                new ObjectParameter("UniqueID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarAfipAuth", tokenParameter, signParameter, generationTimeParameter, expirationTimeParameter, serviceParameter, uniqueIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GuardarC1116A(Nullable<int> idc1116a, string nroCertificadoc1116a, Nullable<int> codigoEstablecimiento, string cuitProveedor, string razonSocialProveedor, Nullable<int> tipoDomicilio, string calleRutaProductor, Nullable<int> nroKmProductor, string pisoProductor, string oficinaDtoProductor, Nullable<int> codigoLocalidadProductor, Nullable<int> codigoPartidoProductor, string codigoPostalProductor, Nullable<int> codigoEspecie, string cosecha, Nullable<int> almacenajeDiasLibres, Nullable<decimal> tarifaAlmacenaje, Nullable<decimal> gastoGenerales, Nullable<decimal> zarandeo, Nullable<decimal> secadoDe, Nullable<decimal> secadoA, Nullable<decimal> tarifaSecado, Nullable<decimal> puntoExceso, Nullable<decimal> tarifaOtros, Nullable<int> codigoPartidoOrigen, Nullable<int> codigoPartidoEntrega, string numeroAnalisis, string numeroBoletin, Nullable<System.DateTime> fechaAnalisis, string grado, Nullable<decimal> factor, Nullable<decimal> contenidoProteico, string cuitLaboratorio, string nombreLaboratorio, Nullable<decimal> pesoBruto, Nullable<decimal> mermaVolatil, Nullable<decimal> mermaZarandeo, Nullable<decimal> mermaSecado, Nullable<decimal> pesoNeto, Nullable<System.DateTime> fechaCierre, Nullable<decimal> importeIVAServicios, Nullable<decimal> totalServicios, string numeroCAC, string usuario)
        {
            var idc1116aParameter = idc1116a.HasValue ?
                new ObjectParameter("Idc1116a", idc1116a) :
                new ObjectParameter("Idc1116a", typeof(int));
    
            var nroCertificadoc1116aParameter = nroCertificadoc1116a != null ?
                new ObjectParameter("NroCertificadoc1116a", nroCertificadoc1116a) :
                new ObjectParameter("NroCertificadoc1116a", typeof(string));
    
            var codigoEstablecimientoParameter = codigoEstablecimiento.HasValue ?
                new ObjectParameter("CodigoEstablecimiento", codigoEstablecimiento) :
                new ObjectParameter("CodigoEstablecimiento", typeof(int));
    
            var cuitProveedorParameter = cuitProveedor != null ?
                new ObjectParameter("CuitProveedor", cuitProveedor) :
                new ObjectParameter("CuitProveedor", typeof(string));
    
            var razonSocialProveedorParameter = razonSocialProveedor != null ?
                new ObjectParameter("RazonSocialProveedor", razonSocialProveedor) :
                new ObjectParameter("RazonSocialProveedor", typeof(string));
    
            var tipoDomicilioParameter = tipoDomicilio.HasValue ?
                new ObjectParameter("TipoDomicilio", tipoDomicilio) :
                new ObjectParameter("TipoDomicilio", typeof(int));
    
            var calleRutaProductorParameter = calleRutaProductor != null ?
                new ObjectParameter("CalleRutaProductor", calleRutaProductor) :
                new ObjectParameter("CalleRutaProductor", typeof(string));
    
            var nroKmProductorParameter = nroKmProductor.HasValue ?
                new ObjectParameter("NroKmProductor", nroKmProductor) :
                new ObjectParameter("NroKmProductor", typeof(int));
    
            var pisoProductorParameter = pisoProductor != null ?
                new ObjectParameter("PisoProductor", pisoProductor) :
                new ObjectParameter("PisoProductor", typeof(string));
    
            var oficinaDtoProductorParameter = oficinaDtoProductor != null ?
                new ObjectParameter("OficinaDtoProductor", oficinaDtoProductor) :
                new ObjectParameter("OficinaDtoProductor", typeof(string));
    
            var codigoLocalidadProductorParameter = codigoLocalidadProductor.HasValue ?
                new ObjectParameter("CodigoLocalidadProductor", codigoLocalidadProductor) :
                new ObjectParameter("CodigoLocalidadProductor", typeof(int));
    
            var codigoPartidoProductorParameter = codigoPartidoProductor.HasValue ?
                new ObjectParameter("CodigoPartidoProductor", codigoPartidoProductor) :
                new ObjectParameter("CodigoPartidoProductor", typeof(int));
    
            var codigoPostalProductorParameter = codigoPostalProductor != null ?
                new ObjectParameter("CodigoPostalProductor", codigoPostalProductor) :
                new ObjectParameter("CodigoPostalProductor", typeof(string));
    
            var codigoEspecieParameter = codigoEspecie.HasValue ?
                new ObjectParameter("CodigoEspecie", codigoEspecie) :
                new ObjectParameter("CodigoEspecie", typeof(int));
    
            var cosechaParameter = cosecha != null ?
                new ObjectParameter("Cosecha", cosecha) :
                new ObjectParameter("Cosecha", typeof(string));
    
            var almacenajeDiasLibresParameter = almacenajeDiasLibres.HasValue ?
                new ObjectParameter("AlmacenajeDiasLibres", almacenajeDiasLibres) :
                new ObjectParameter("AlmacenajeDiasLibres", typeof(int));
    
            var tarifaAlmacenajeParameter = tarifaAlmacenaje.HasValue ?
                new ObjectParameter("TarifaAlmacenaje", tarifaAlmacenaje) :
                new ObjectParameter("TarifaAlmacenaje", typeof(decimal));
    
            var gastoGeneralesParameter = gastoGenerales.HasValue ?
                new ObjectParameter("GastoGenerales", gastoGenerales) :
                new ObjectParameter("GastoGenerales", typeof(decimal));
    
            var zarandeoParameter = zarandeo.HasValue ?
                new ObjectParameter("Zarandeo", zarandeo) :
                new ObjectParameter("Zarandeo", typeof(decimal));
    
            var secadoDeParameter = secadoDe.HasValue ?
                new ObjectParameter("SecadoDe", secadoDe) :
                new ObjectParameter("SecadoDe", typeof(decimal));
    
            var secadoAParameter = secadoA.HasValue ?
                new ObjectParameter("SecadoA", secadoA) :
                new ObjectParameter("SecadoA", typeof(decimal));
    
            var tarifaSecadoParameter = tarifaSecado.HasValue ?
                new ObjectParameter("TarifaSecado", tarifaSecado) :
                new ObjectParameter("TarifaSecado", typeof(decimal));
    
            var puntoExcesoParameter = puntoExceso.HasValue ?
                new ObjectParameter("PuntoExceso", puntoExceso) :
                new ObjectParameter("PuntoExceso", typeof(decimal));
    
            var tarifaOtrosParameter = tarifaOtros.HasValue ?
                new ObjectParameter("TarifaOtros", tarifaOtros) :
                new ObjectParameter("TarifaOtros", typeof(decimal));
    
            var codigoPartidoOrigenParameter = codigoPartidoOrigen.HasValue ?
                new ObjectParameter("CodigoPartidoOrigen", codigoPartidoOrigen) :
                new ObjectParameter("CodigoPartidoOrigen", typeof(int));
    
            var codigoPartidoEntregaParameter = codigoPartidoEntrega.HasValue ?
                new ObjectParameter("CodigoPartidoEntrega", codigoPartidoEntrega) :
                new ObjectParameter("CodigoPartidoEntrega", typeof(int));
    
            var numeroAnalisisParameter = numeroAnalisis != null ?
                new ObjectParameter("NumeroAnalisis", numeroAnalisis) :
                new ObjectParameter("NumeroAnalisis", typeof(string));
    
            var numeroBoletinParameter = numeroBoletin != null ?
                new ObjectParameter("NumeroBoletin", numeroBoletin) :
                new ObjectParameter("NumeroBoletin", typeof(string));
    
            var fechaAnalisisParameter = fechaAnalisis.HasValue ?
                new ObjectParameter("FechaAnalisis", fechaAnalisis) :
                new ObjectParameter("FechaAnalisis", typeof(System.DateTime));
    
            var gradoParameter = grado != null ?
                new ObjectParameter("Grado", grado) :
                new ObjectParameter("Grado", typeof(string));
    
            var factorParameter = factor.HasValue ?
                new ObjectParameter("Factor", factor) :
                new ObjectParameter("Factor", typeof(decimal));
    
            var contenidoProteicoParameter = contenidoProteico.HasValue ?
                new ObjectParameter("ContenidoProteico", contenidoProteico) :
                new ObjectParameter("ContenidoProteico", typeof(decimal));
    
            var cuitLaboratorioParameter = cuitLaboratorio != null ?
                new ObjectParameter("CuitLaboratorio", cuitLaboratorio) :
                new ObjectParameter("CuitLaboratorio", typeof(string));
    
            var nombreLaboratorioParameter = nombreLaboratorio != null ?
                new ObjectParameter("NombreLaboratorio", nombreLaboratorio) :
                new ObjectParameter("NombreLaboratorio", typeof(string));
    
            var pesoBrutoParameter = pesoBruto.HasValue ?
                new ObjectParameter("PesoBruto", pesoBruto) :
                new ObjectParameter("PesoBruto", typeof(decimal));
    
            var mermaVolatilParameter = mermaVolatil.HasValue ?
                new ObjectParameter("MermaVolatil", mermaVolatil) :
                new ObjectParameter("MermaVolatil", typeof(decimal));
    
            var mermaZarandeoParameter = mermaZarandeo.HasValue ?
                new ObjectParameter("MermaZarandeo", mermaZarandeo) :
                new ObjectParameter("MermaZarandeo", typeof(decimal));
    
            var mermaSecadoParameter = mermaSecado.HasValue ?
                new ObjectParameter("MermaSecado", mermaSecado) :
                new ObjectParameter("MermaSecado", typeof(decimal));
    
            var pesoNetoParameter = pesoNeto.HasValue ?
                new ObjectParameter("PesoNeto", pesoNeto) :
                new ObjectParameter("PesoNeto", typeof(decimal));
    
            var fechaCierreParameter = fechaCierre.HasValue ?
                new ObjectParameter("FechaCierre", fechaCierre) :
                new ObjectParameter("FechaCierre", typeof(System.DateTime));
    
            var importeIVAServiciosParameter = importeIVAServicios.HasValue ?
                new ObjectParameter("ImporteIVAServicios", importeIVAServicios) :
                new ObjectParameter("ImporteIVAServicios", typeof(decimal));
    
            var totalServiciosParameter = totalServicios.HasValue ?
                new ObjectParameter("TotalServicios", totalServicios) :
                new ObjectParameter("TotalServicios", typeof(decimal));
    
            var numeroCACParameter = numeroCAC != null ?
                new ObjectParameter("NumeroCAC", numeroCAC) :
                new ObjectParameter("NumeroCAC", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GuardarC1116A", idc1116aParameter, nroCertificadoc1116aParameter, codigoEstablecimientoParameter, cuitProveedorParameter, razonSocialProveedorParameter, tipoDomicilioParameter, calleRutaProductorParameter, nroKmProductorParameter, pisoProductorParameter, oficinaDtoProductorParameter, codigoLocalidadProductorParameter, codigoPartidoProductorParameter, codigoPostalProductorParameter, codigoEspecieParameter, cosechaParameter, almacenajeDiasLibresParameter, tarifaAlmacenajeParameter, gastoGeneralesParameter, zarandeoParameter, secadoDeParameter, secadoAParameter, tarifaSecadoParameter, puntoExcesoParameter, tarifaOtrosParameter, codigoPartidoOrigenParameter, codigoPartidoEntregaParameter, numeroAnalisisParameter, numeroBoletinParameter, fechaAnalisisParameter, gradoParameter, factorParameter, contenidoProteicoParameter, cuitLaboratorioParameter, nombreLaboratorioParameter, pesoBrutoParameter, mermaVolatilParameter, mermaZarandeoParameter, mermaSecadoParameter, pesoNetoParameter, fechaCierreParameter, importeIVAServiciosParameter, totalServiciosParameter, numeroCACParameter, usuarioParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GuardarC1116ADetalle(Nullable<int> idc1116aDetalle, Nullable<int> idc1116a, Nullable<int> numeroCartaDePorte, Nullable<int> numeroCertificadoAsociado, Nullable<decimal> kgBrutos, Nullable<System.DateTime> fechaRemesa)
        {
            var idc1116aDetalleParameter = idc1116aDetalle.HasValue ?
                new ObjectParameter("Idc1116aDetalle", idc1116aDetalle) :
                new ObjectParameter("Idc1116aDetalle", typeof(int));
    
            var idc1116aParameter = idc1116a.HasValue ?
                new ObjectParameter("Idc1116a", idc1116a) :
                new ObjectParameter("Idc1116a", typeof(int));
    
            var numeroCartaDePorteParameter = numeroCartaDePorte.HasValue ?
                new ObjectParameter("NumeroCartaDePorte", numeroCartaDePorte) :
                new ObjectParameter("NumeroCartaDePorte", typeof(int));
    
            var numeroCertificadoAsociadoParameter = numeroCertificadoAsociado.HasValue ?
                new ObjectParameter("NumeroCertificadoAsociado", numeroCertificadoAsociado) :
                new ObjectParameter("NumeroCertificadoAsociado", typeof(int));
    
            var kgBrutosParameter = kgBrutos.HasValue ?
                new ObjectParameter("KgBrutos", kgBrutos) :
                new ObjectParameter("KgBrutos", typeof(decimal));
    
            var fechaRemesaParameter = fechaRemesa.HasValue ?
                new ObjectParameter("FechaRemesa", fechaRemesa) :
                new ObjectParameter("FechaRemesa", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GuardarC1116ADetalle", idc1116aDetalleParameter, idc1116aParameter, numeroCartaDePorteParameter, numeroCertificadoAsociadoParameter, kgBrutosParameter, fechaRemesaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GuardarCartasDePorte(string desde, string hasta, string nroCEE, Nullable<System.DateTime> fechaVencimiento, string usuario, string establecimientoOrigen, Nullable<int> idGrupoEmpresa, string sucursal, string puntoEmision, Nullable<System.DateTime> fechaDesde, Nullable<decimal> habilitacionNum)
        {
            var desdeParameter = desde != null ?
                new ObjectParameter("Desde", desde) :
                new ObjectParameter("Desde", typeof(string));
    
            var hastaParameter = hasta != null ?
                new ObjectParameter("Hasta", hasta) :
                new ObjectParameter("Hasta", typeof(string));
    
            var nroCEEParameter = nroCEE != null ?
                new ObjectParameter("NroCEE", nroCEE) :
                new ObjectParameter("NroCEE", typeof(string));
    
            var fechaVencimientoParameter = fechaVencimiento.HasValue ?
                new ObjectParameter("FechaVencimiento", fechaVencimiento) :
                new ObjectParameter("FechaVencimiento", typeof(System.DateTime));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var establecimientoOrigenParameter = establecimientoOrigen != null ?
                new ObjectParameter("EstablecimientoOrigen", establecimientoOrigen) :
                new ObjectParameter("EstablecimientoOrigen", typeof(string));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            var sucursalParameter = sucursal != null ?
                new ObjectParameter("Sucursal", sucursal) :
                new ObjectParameter("Sucursal", typeof(string));
    
            var puntoEmisionParameter = puntoEmision != null ?
                new ObjectParameter("PuntoEmision", puntoEmision) :
                new ObjectParameter("PuntoEmision", typeof(string));
    
            var fechaDesdeParameter = fechaDesde.HasValue ?
                new ObjectParameter("FechaDesde", fechaDesde) :
                new ObjectParameter("FechaDesde", typeof(System.DateTime));
    
            var habilitacionNumParameter = habilitacionNum.HasValue ?
                new ObjectParameter("HabilitacionNum", habilitacionNum) :
                new ObjectParameter("HabilitacionNum", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GuardarCartasDePorte", desdeParameter, hastaParameter, nroCEEParameter, fechaVencimientoParameter, usuarioParameter, establecimientoOrigenParameter, idGrupoEmpresaParameter, sucursalParameter, puntoEmisionParameter, fechaDesdeParameter, habilitacionNumParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GuardarChofer(Nullable<int> idChofer, string nombre, string apellido, string cuit, string camion, string acoplado, string usuario, Nullable<bool> esChoferTransportista, Nullable<int> idGrupoEmpresa, string domicilio, string marca)
        {
            var idChoferParameter = idChofer.HasValue ?
                new ObjectParameter("IdChofer", idChofer) :
                new ObjectParameter("IdChofer", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var cuitParameter = cuit != null ?
                new ObjectParameter("Cuit", cuit) :
                new ObjectParameter("Cuit", typeof(string));
    
            var camionParameter = camion != null ?
                new ObjectParameter("Camion", camion) :
                new ObjectParameter("Camion", typeof(string));
    
            var acopladoParameter = acoplado != null ?
                new ObjectParameter("Acoplado", acoplado) :
                new ObjectParameter("Acoplado", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var esChoferTransportistaParameter = esChoferTransportista.HasValue ?
                new ObjectParameter("EsChoferTransportista", esChoferTransportista) :
                new ObjectParameter("EsChoferTransportista", typeof(bool));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            var domicilioParameter = domicilio != null ?
                new ObjectParameter("Domicilio", domicilio) :
                new ObjectParameter("Domicilio", typeof(string));
    
            var marcaParameter = marca != null ?
                new ObjectParameter("Marca", marca) :
                new ObjectParameter("Marca", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GuardarChofer", idChoferParameter, nombreParameter, apellidoParameter, cuitParameter, camionParameter, acopladoParameter, usuarioParameter, esChoferTransportistaParameter, idGrupoEmpresaParameter, domicilioParameter, marcaParameter);
        }
    
        public virtual int GuardarCliente(Nullable<int> idCliente, string razonSocial, string nombreFantasia, string cuit, Nullable<int> iDTipoDocumentoSAP, Nullable<int> idClientePrincipal, string calle, string numero, string dto, string piso, string cp, string poblacion, Nullable<bool> activo, string grupoComercial, string claveGrupo, string tratamiento, string descripcionGe, Nullable<bool> esProspecto, Nullable<int> idSapOrganizacionDeVenta, Nullable<int> idEmpresa)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var nombreFantasiaParameter = nombreFantasia != null ?
                new ObjectParameter("NombreFantasia", nombreFantasia) :
                new ObjectParameter("NombreFantasia", typeof(string));
    
            var cuitParameter = cuit != null ?
                new ObjectParameter("Cuit", cuit) :
                new ObjectParameter("Cuit", typeof(string));
    
            var iDTipoDocumentoSAPParameter = iDTipoDocumentoSAP.HasValue ?
                new ObjectParameter("IDTipoDocumentoSAP", iDTipoDocumentoSAP) :
                new ObjectParameter("IDTipoDocumentoSAP", typeof(int));
    
            var idClientePrincipalParameter = idClientePrincipal.HasValue ?
                new ObjectParameter("IdClientePrincipal", idClientePrincipal) :
                new ObjectParameter("IdClientePrincipal", typeof(int));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var dtoParameter = dto != null ?
                new ObjectParameter("Dto", dto) :
                new ObjectParameter("Dto", typeof(string));
    
            var pisoParameter = piso != null ?
                new ObjectParameter("Piso", piso) :
                new ObjectParameter("Piso", typeof(string));
    
            var cpParameter = cp != null ?
                new ObjectParameter("Cp", cp) :
                new ObjectParameter("Cp", typeof(string));
    
            var poblacionParameter = poblacion != null ?
                new ObjectParameter("Poblacion", poblacion) :
                new ObjectParameter("Poblacion", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            var grupoComercialParameter = grupoComercial != null ?
                new ObjectParameter("GrupoComercial", grupoComercial) :
                new ObjectParameter("GrupoComercial", typeof(string));
    
            var claveGrupoParameter = claveGrupo != null ?
                new ObjectParameter("ClaveGrupo", claveGrupo) :
                new ObjectParameter("ClaveGrupo", typeof(string));
    
            var tratamientoParameter = tratamiento != null ?
                new ObjectParameter("Tratamiento", tratamiento) :
                new ObjectParameter("Tratamiento", typeof(string));
    
            var descripcionGeParameter = descripcionGe != null ?
                new ObjectParameter("DescripcionGe", descripcionGe) :
                new ObjectParameter("DescripcionGe", typeof(string));
    
            var esProspectoParameter = esProspecto.HasValue ?
                new ObjectParameter("EsProspecto", esProspecto) :
                new ObjectParameter("EsProspecto", typeof(bool));
    
            var idSapOrganizacionDeVentaParameter = idSapOrganizacionDeVenta.HasValue ?
                new ObjectParameter("IdSapOrganizacionDeVenta", idSapOrganizacionDeVenta) :
                new ObjectParameter("IdSapOrganizacionDeVenta", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarCliente", idClienteParameter, razonSocialParameter, nombreFantasiaParameter, cuitParameter, iDTipoDocumentoSAPParameter, idClientePrincipalParameter, calleParameter, numeroParameter, dtoParameter, pisoParameter, cpParameter, poblacionParameter, activoParameter, grupoComercialParameter, claveGrupoParameter, tratamientoParameter, descripcionGeParameter, esProspectoParameter, idSapOrganizacionDeVentaParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GuardarCosecha(Nullable<int> idCosecha, string codigo, string descripcion, Nullable<int> idGrupoEmpresa)
        {
            var idCosechaParameter = idCosecha.HasValue ?
                new ObjectParameter("IdCosecha", idCosecha) :
                new ObjectParameter("IdCosecha", typeof(int));
    
            var codigoParameter = codigo != null ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GuardarCosecha", idCosechaParameter, codigoParameter, descripcionParameter, idGrupoEmpresaParameter);
        }
    
        public virtual int GuardarEmpresa(Nullable<int> idEmpresa, Nullable<int> idCliente, string descripcion, string idSapOrganizacionDeVenta, string idSapSector, string idSapCanalLocal, string idSapCanalExpor)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idSapOrganizacionDeVentaParameter = idSapOrganizacionDeVenta != null ?
                new ObjectParameter("IdSapOrganizacionDeVenta", idSapOrganizacionDeVenta) :
                new ObjectParameter("IdSapOrganizacionDeVenta", typeof(string));
    
            var idSapSectorParameter = idSapSector != null ?
                new ObjectParameter("IdSapSector", idSapSector) :
                new ObjectParameter("IdSapSector", typeof(string));
    
            var idSapCanalLocalParameter = idSapCanalLocal != null ?
                new ObjectParameter("IdSapCanalLocal", idSapCanalLocal) :
                new ObjectParameter("IdSapCanalLocal", typeof(string));
    
            var idSapCanalExporParameter = idSapCanalExpor != null ?
                new ObjectParameter("IdSapCanalExpor", idSapCanalExpor) :
                new ObjectParameter("IdSapCanalExpor", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarEmpresa", idEmpresaParameter, idClienteParameter, descripcionParameter, idSapOrganizacionDeVentaParameter, idSapSectorParameter, idSapCanalLocalParameter, idSapCanalExporParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GuardarEmpresaABM(Nullable<int> idEmpresa, Nullable<int> idCliente, string descripcion, string idSapOrganizacionDeVenta, string idSapSector, string idSapCanalLocal, string idSapCanalExpor, string sap_Id, Nullable<int> idGrupoEmpresa, string idSapMoneda)
        {
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idSapOrganizacionDeVentaParameter = idSapOrganizacionDeVenta != null ?
                new ObjectParameter("IdSapOrganizacionDeVenta", idSapOrganizacionDeVenta) :
                new ObjectParameter("IdSapOrganizacionDeVenta", typeof(string));
    
            var idSapSectorParameter = idSapSector != null ?
                new ObjectParameter("IdSapSector", idSapSector) :
                new ObjectParameter("IdSapSector", typeof(string));
    
            var idSapCanalLocalParameter = idSapCanalLocal != null ?
                new ObjectParameter("IdSapCanalLocal", idSapCanalLocal) :
                new ObjectParameter("IdSapCanalLocal", typeof(string));
    
            var idSapCanalExporParameter = idSapCanalExpor != null ?
                new ObjectParameter("IdSapCanalExpor", idSapCanalExpor) :
                new ObjectParameter("IdSapCanalExpor", typeof(string));
    
            var sap_IdParameter = sap_Id != null ?
                new ObjectParameter("Sap_Id", sap_Id) :
                new ObjectParameter("Sap_Id", typeof(string));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            var idSapMonedaParameter = idSapMoneda != null ?
                new ObjectParameter("IdSapMoneda", idSapMoneda) :
                new ObjectParameter("IdSapMoneda", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GuardarEmpresaABM", idEmpresaParameter, idClienteParameter, descripcionParameter, idSapOrganizacionDeVentaParameter, idSapSectorParameter, idSapCanalLocalParameter, idSapCanalExporParameter, sap_IdParameter, idGrupoEmpresaParameter, idSapMonedaParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> GuardarEspecie(Nullable<int> idEspecie, Nullable<int> codigo, string descripcion, Nullable<int> idGrupoEmpresa)
        {
            var idEspecieParameter = idEspecie.HasValue ?
                new ObjectParameter("IdEspecie", idEspecie) :
                new ObjectParameter("IdEspecie", typeof(int));
    
            var codigoParameter = codigo.HasValue ?
                new ObjectParameter("Codigo", codigo) :
                new ObjectParameter("Codigo", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("GuardarEspecie", idEspecieParameter, codigoParameter, descripcionParameter, idGrupoEmpresaParameter);
        }
    
        public virtual int GuardarEstablecimiento(Nullable<int> idEstablecimiento, string descripcion, string direccion, Nullable<int> localidad, Nullable<int> provincia, string iDAlmacenSAP, string iDCentroSAP, Nullable<int> idInterlocutorDestinatario, Nullable<int> recorridoEstablecimiento, string cebe, string expedicion, string establecimientoAfip, Nullable<bool> asociaCartaDePorte, string usuario, Nullable<int> idEmpresa)
        {
            var idEstablecimientoParameter = idEstablecimiento.HasValue ?
                new ObjectParameter("IdEstablecimiento", idEstablecimiento) :
                new ObjectParameter("IdEstablecimiento", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var direccionParameter = direccion != null ?
                new ObjectParameter("Direccion", direccion) :
                new ObjectParameter("Direccion", typeof(string));
    
            var localidadParameter = localidad.HasValue ?
                new ObjectParameter("Localidad", localidad) :
                new ObjectParameter("Localidad", typeof(int));
    
            var provinciaParameter = provincia.HasValue ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(int));
    
            var iDAlmacenSAPParameter = iDAlmacenSAP != null ?
                new ObjectParameter("IDAlmacenSAP", iDAlmacenSAP) :
                new ObjectParameter("IDAlmacenSAP", typeof(string));
    
            var iDCentroSAPParameter = iDCentroSAP != null ?
                new ObjectParameter("IDCentroSAP", iDCentroSAP) :
                new ObjectParameter("IDCentroSAP", typeof(string));
    
            var idInterlocutorDestinatarioParameter = idInterlocutorDestinatario.HasValue ?
                new ObjectParameter("IdInterlocutorDestinatario", idInterlocutorDestinatario) :
                new ObjectParameter("IdInterlocutorDestinatario", typeof(int));
    
            var recorridoEstablecimientoParameter = recorridoEstablecimiento.HasValue ?
                new ObjectParameter("RecorridoEstablecimiento", recorridoEstablecimiento) :
                new ObjectParameter("RecorridoEstablecimiento", typeof(int));
    
            var cebeParameter = cebe != null ?
                new ObjectParameter("cebe", cebe) :
                new ObjectParameter("cebe", typeof(string));
    
            var expedicionParameter = expedicion != null ?
                new ObjectParameter("expedicion", expedicion) :
                new ObjectParameter("expedicion", typeof(string));
    
            var establecimientoAfipParameter = establecimientoAfip != null ?
                new ObjectParameter("establecimientoAfip", establecimientoAfip) :
                new ObjectParameter("establecimientoAfip", typeof(string));
    
            var asociaCartaDePorteParameter = asociaCartaDePorte.HasValue ?
                new ObjectParameter("asociaCartaDePorte", asociaCartaDePorte) :
                new ObjectParameter("asociaCartaDePorte", typeof(bool));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarEstablecimiento", idEstablecimientoParameter, descripcionParameter, direccionParameter, localidadParameter, provinciaParameter, iDAlmacenSAPParameter, iDCentroSAPParameter, idInterlocutorDestinatarioParameter, recorridoEstablecimientoParameter, cebeParameter, expedicionParameter, establecimientoAfipParameter, asociaCartaDePorteParameter, usuarioParameter, idEmpresaParameter);
        }
    
        public virtual int GuardarEstadoCartaDePorte(Nullable<int> id, Nullable<int> estado, Nullable<int> idGrupoEmpresa)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var estadoParameter = estado.HasValue ?
                new ObjectParameter("estado", estado) :
                new ObjectParameter("estado", typeof(int));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarEstadoCartaDePorte", idParameter, estadoParameter, idGrupoEmpresaParameter);
        }
    
        public virtual int GuardarGrano(Nullable<int> idGrano, string descripcion, string idMaterialSap, Nullable<int> especieAfip, Nullable<int> cosechaAfip, Nullable<int> idTipoGrano, string sujetoALote, string usuario, Nullable<int> idGrupoEmpresa)
        {
            var idGranoParameter = idGrano.HasValue ?
                new ObjectParameter("IdGrano", idGrano) :
                new ObjectParameter("IdGrano", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var idMaterialSapParameter = idMaterialSap != null ?
                new ObjectParameter("IdMaterialSap", idMaterialSap) :
                new ObjectParameter("IdMaterialSap", typeof(string));
    
            var especieAfipParameter = especieAfip.HasValue ?
                new ObjectParameter("EspecieAfip", especieAfip) :
                new ObjectParameter("EspecieAfip", typeof(int));
    
            var cosechaAfipParameter = cosechaAfip.HasValue ?
                new ObjectParameter("CosechaAfip", cosechaAfip) :
                new ObjectParameter("CosechaAfip", typeof(int));
    
            var idTipoGranoParameter = idTipoGrano.HasValue ?
                new ObjectParameter("IdTipoGrano", idTipoGrano) :
                new ObjectParameter("IdTipoGrano", typeof(int));
    
            var sujetoALoteParameter = sujetoALote != null ?
                new ObjectParameter("SujetoALote", sujetoALote) :
                new ObjectParameter("SujetoALote", typeof(string));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarGrano", idGranoParameter, descripcionParameter, idMaterialSapParameter, especieAfipParameter, cosechaAfipParameter, idTipoGranoParameter, sujetoALoteParameter, usuarioParameter, idGrupoEmpresaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GuardarGrupoEmpresa(Nullable<int> idGrupoEmpresa, string descripcion, Nullable<bool> activo, Nullable<int> idPais, Nullable<int> idApp)
        {
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            var idPaisParameter = idPais.HasValue ?
                new ObjectParameter("IdPais", idPais) :
                new ObjectParameter("IdPais", typeof(int));
    
            var idAppParameter = idApp.HasValue ?
                new ObjectParameter("IdApp", idApp) :
                new ObjectParameter("IdApp", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GuardarGrupoEmpresa", idGrupoEmpresaParameter, descripcionParameter, activoParameter, idPaisParameter, idAppParameter);
        }
    
        public virtual int GuardarLogSap(string iDoc, string origen, string nroDocumentoRE, string nroDocumentoSap, string tipoMensaje, string textoMensaje, Nullable<int> nroEnvio)
        {
            var iDocParameter = iDoc != null ?
                new ObjectParameter("IDoc", iDoc) :
                new ObjectParameter("IDoc", typeof(string));
    
            var origenParameter = origen != null ?
                new ObjectParameter("Origen", origen) :
                new ObjectParameter("Origen", typeof(string));
    
            var nroDocumentoREParameter = nroDocumentoRE != null ?
                new ObjectParameter("NroDocumentoRE", nroDocumentoRE) :
                new ObjectParameter("NroDocumentoRE", typeof(string));
    
            var nroDocumentoSapParameter = nroDocumentoSap != null ?
                new ObjectParameter("NroDocumentoSap", nroDocumentoSap) :
                new ObjectParameter("NroDocumentoSap", typeof(string));
    
            var tipoMensajeParameter = tipoMensaje != null ?
                new ObjectParameter("TipoMensaje", tipoMensaje) :
                new ObjectParameter("TipoMensaje", typeof(string));
    
            var textoMensajeParameter = textoMensaje != null ?
                new ObjectParameter("TextoMensaje", textoMensaje) :
                new ObjectParameter("TextoMensaje", typeof(string));
    
            var nroEnvioParameter = nroEnvio.HasValue ?
                new ObjectParameter("NroEnvio", nroEnvio) :
                new ObjectParameter("NroEnvio", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarLogSap", iDocParameter, origenParameter, nroDocumentoREParameter, nroDocumentoSapParameter, tipoMensajeParameter, textoMensajeParameter, nroEnvioParameter);
        }
    
        public virtual int GuardarProveedor(Nullable<int> idProveedor, string sap_Id, string nombre, Nullable<int> idTipoDocumentoSAP, string numeroDocumento, string calle, string piso, string departamento, string numero, string cP, string ciudad, string pais, Nullable<bool> activo, Nullable<bool> esProspecto, Nullable<int> idSapOrganizacionDeVenta, Nullable<int> idEmpresa)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            var sap_IdParameter = sap_Id != null ?
                new ObjectParameter("Sap_Id", sap_Id) :
                new ObjectParameter("Sap_Id", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idTipoDocumentoSAPParameter = idTipoDocumentoSAP.HasValue ?
                new ObjectParameter("IdTipoDocumentoSAP", idTipoDocumentoSAP) :
                new ObjectParameter("IdTipoDocumentoSAP", typeof(int));
    
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var pisoParameter = piso != null ?
                new ObjectParameter("Piso", piso) :
                new ObjectParameter("Piso", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var cPParameter = cP != null ?
                new ObjectParameter("CP", cP) :
                new ObjectParameter("CP", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("Ciudad", ciudad) :
                new ObjectParameter("Ciudad", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            var esProspectoParameter = esProspecto.HasValue ?
                new ObjectParameter("EsProspecto", esProspecto) :
                new ObjectParameter("EsProspecto", typeof(bool));
    
            var idSapOrganizacionDeVentaParameter = idSapOrganizacionDeVenta.HasValue ?
                new ObjectParameter("IdSapOrganizacionDeVenta", idSapOrganizacionDeVenta) :
                new ObjectParameter("IdSapOrganizacionDeVenta", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarProveedor", idProveedorParameter, sap_IdParameter, nombreParameter, idTipoDocumentoSAPParameter, numeroDocumentoParameter, calleParameter, pisoParameter, departamentoParameter, numeroParameter, cPParameter, ciudadParameter, paisParameter, activoParameter, esProspectoParameter, idSapOrganizacionDeVentaParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GuardarSolicitud(Nullable<int> idSolicitud, Nullable<int> idTipoDeCarta, string observacionAfip, string numeroCartaDePorte, string cee, string ctg, Nullable<System.DateTime> fechaDeEmision, Nullable<System.DateTime> fechaDeCarga, Nullable<System.DateTime> fechaDeVencimiento, Nullable<int> idProveedorTitularCartaDePorte, Nullable<int> idClienteIntermediario, Nullable<int> idClienteRemitenteComercial, Nullable<bool> remitenteComercialComoCanjeador, Nullable<int> idClienteCorredor, Nullable<int> idClienteEntregador, Nullable<int> idClienteDestinatario, Nullable<int> idClienteDestino, Nullable<int> idProveedorTransportista, Nullable<int> idChoferTransportista, Nullable<int> idChofer, Nullable<int> idCosecha, Nullable<int> idEspecie, Nullable<int> numeroContrato, Nullable<int> sapContrato, Nullable<bool> sinContrato, Nullable<bool> cargaPesadaDestino, Nullable<decimal> kilogramosEstimados, string declaracionDeCalidad, Nullable<int> idConformeCondicional, Nullable<decimal> pesoBruto, Nullable<decimal> pesoTara, string observaciones, string loteDeMaterial, Nullable<int> idEstablecimientoProcedencia, Nullable<int> idEstablecimientoDestino, string patenteCamion, string patenteAcoplado, Nullable<decimal> kmRecorridos, Nullable<int> estadoFlete, Nullable<decimal> cantHoras, Nullable<decimal> tarifaReferencia, Nullable<decimal> tarifaReal, Nullable<int> idClientePagadorDelFlete, Nullable<int> estadoEnSAP, Nullable<int> estadoEnAFIP, Nullable<int> idGrano, Nullable<decimal> codigoAnulacionAfip, Nullable<System.DateTime> fechaAnulacionAfip, string codigoRespuestaEnvioSAP, string codigoRespuestaAnulacionSAP, string mensajeRespuestaEnvioSAP, string mensajeRespuestaAnulacionSAP, Nullable<int> idEstablecimientoDestinoCambio, Nullable<int> idClienteDestinatarioCambio, string usuario, Nullable<int> idEmpresa, Nullable<decimal> pHumedad, Nullable<decimal> pOtros)
        {
            var idSolicitudParameter = idSolicitud.HasValue ?
                new ObjectParameter("IdSolicitud", idSolicitud) :
                new ObjectParameter("IdSolicitud", typeof(int));
    
            var idTipoDeCartaParameter = idTipoDeCarta.HasValue ?
                new ObjectParameter("IdTipoDeCarta", idTipoDeCarta) :
                new ObjectParameter("IdTipoDeCarta", typeof(int));
    
            var observacionAfipParameter = observacionAfip != null ?
                new ObjectParameter("ObservacionAfip", observacionAfip) :
                new ObjectParameter("ObservacionAfip", typeof(string));
    
            var numeroCartaDePorteParameter = numeroCartaDePorte != null ?
                new ObjectParameter("NumeroCartaDePorte", numeroCartaDePorte) :
                new ObjectParameter("NumeroCartaDePorte", typeof(string));
    
            var ceeParameter = cee != null ?
                new ObjectParameter("Cee", cee) :
                new ObjectParameter("Cee", typeof(string));
    
            var ctgParameter = ctg != null ?
                new ObjectParameter("Ctg", ctg) :
                new ObjectParameter("Ctg", typeof(string));
    
            var fechaDeEmisionParameter = fechaDeEmision.HasValue ?
                new ObjectParameter("FechaDeEmision", fechaDeEmision) :
                new ObjectParameter("FechaDeEmision", typeof(System.DateTime));
    
            var fechaDeCargaParameter = fechaDeCarga.HasValue ?
                new ObjectParameter("FechaDeCarga", fechaDeCarga) :
                new ObjectParameter("FechaDeCarga", typeof(System.DateTime));
    
            var fechaDeVencimientoParameter = fechaDeVencimiento.HasValue ?
                new ObjectParameter("FechaDeVencimiento", fechaDeVencimiento) :
                new ObjectParameter("FechaDeVencimiento", typeof(System.DateTime));
    
            var idProveedorTitularCartaDePorteParameter = idProveedorTitularCartaDePorte.HasValue ?
                new ObjectParameter("IdProveedorTitularCartaDePorte", idProveedorTitularCartaDePorte) :
                new ObjectParameter("IdProveedorTitularCartaDePorte", typeof(int));
    
            var idClienteIntermediarioParameter = idClienteIntermediario.HasValue ?
                new ObjectParameter("IdClienteIntermediario", idClienteIntermediario) :
                new ObjectParameter("IdClienteIntermediario", typeof(int));
    
            var idClienteRemitenteComercialParameter = idClienteRemitenteComercial.HasValue ?
                new ObjectParameter("IdClienteRemitenteComercial", idClienteRemitenteComercial) :
                new ObjectParameter("IdClienteRemitenteComercial", typeof(int));
    
            var remitenteComercialComoCanjeadorParameter = remitenteComercialComoCanjeador.HasValue ?
                new ObjectParameter("RemitenteComercialComoCanjeador", remitenteComercialComoCanjeador) :
                new ObjectParameter("RemitenteComercialComoCanjeador", typeof(bool));
    
            var idClienteCorredorParameter = idClienteCorredor.HasValue ?
                new ObjectParameter("IdClienteCorredor", idClienteCorredor) :
                new ObjectParameter("IdClienteCorredor", typeof(int));
    
            var idClienteEntregadorParameter = idClienteEntregador.HasValue ?
                new ObjectParameter("IdClienteEntregador", idClienteEntregador) :
                new ObjectParameter("IdClienteEntregador", typeof(int));
    
            var idClienteDestinatarioParameter = idClienteDestinatario.HasValue ?
                new ObjectParameter("IdClienteDestinatario", idClienteDestinatario) :
                new ObjectParameter("IdClienteDestinatario", typeof(int));
    
            var idClienteDestinoParameter = idClienteDestino.HasValue ?
                new ObjectParameter("IdClienteDestino", idClienteDestino) :
                new ObjectParameter("IdClienteDestino", typeof(int));
    
            var idProveedorTransportistaParameter = idProveedorTransportista.HasValue ?
                new ObjectParameter("IdProveedorTransportista", idProveedorTransportista) :
                new ObjectParameter("IdProveedorTransportista", typeof(int));
    
            var idChoferTransportistaParameter = idChoferTransportista.HasValue ?
                new ObjectParameter("IdChoferTransportista", idChoferTransportista) :
                new ObjectParameter("IdChoferTransportista", typeof(int));
    
            var idChoferParameter = idChofer.HasValue ?
                new ObjectParameter("IdChofer", idChofer) :
                new ObjectParameter("IdChofer", typeof(int));
    
            var idCosechaParameter = idCosecha.HasValue ?
                new ObjectParameter("IdCosecha", idCosecha) :
                new ObjectParameter("IdCosecha", typeof(int));
    
            var idEspecieParameter = idEspecie.HasValue ?
                new ObjectParameter("IdEspecie", idEspecie) :
                new ObjectParameter("IdEspecie", typeof(int));
    
            var numeroContratoParameter = numeroContrato.HasValue ?
                new ObjectParameter("NumeroContrato", numeroContrato) :
                new ObjectParameter("NumeroContrato", typeof(int));
    
            var sapContratoParameter = sapContrato.HasValue ?
                new ObjectParameter("SapContrato", sapContrato) :
                new ObjectParameter("SapContrato", typeof(int));
    
            var sinContratoParameter = sinContrato.HasValue ?
                new ObjectParameter("SinContrato", sinContrato) :
                new ObjectParameter("SinContrato", typeof(bool));
    
            var cargaPesadaDestinoParameter = cargaPesadaDestino.HasValue ?
                new ObjectParameter("CargaPesadaDestino", cargaPesadaDestino) :
                new ObjectParameter("CargaPesadaDestino", typeof(bool));
    
            var kilogramosEstimadosParameter = kilogramosEstimados.HasValue ?
                new ObjectParameter("KilogramosEstimados", kilogramosEstimados) :
                new ObjectParameter("KilogramosEstimados", typeof(decimal));
    
            var declaracionDeCalidadParameter = declaracionDeCalidad != null ?
                new ObjectParameter("DeclaracionDeCalidad", declaracionDeCalidad) :
                new ObjectParameter("DeclaracionDeCalidad", typeof(string));
    
            var idConformeCondicionalParameter = idConformeCondicional.HasValue ?
                new ObjectParameter("IdConformeCondicional", idConformeCondicional) :
                new ObjectParameter("IdConformeCondicional", typeof(int));
    
            var pesoBrutoParameter = pesoBruto.HasValue ?
                new ObjectParameter("PesoBruto", pesoBruto) :
                new ObjectParameter("PesoBruto", typeof(decimal));
    
            var pesoTaraParameter = pesoTara.HasValue ?
                new ObjectParameter("PesoTara", pesoTara) :
                new ObjectParameter("PesoTara", typeof(decimal));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var loteDeMaterialParameter = loteDeMaterial != null ?
                new ObjectParameter("LoteDeMaterial", loteDeMaterial) :
                new ObjectParameter("LoteDeMaterial", typeof(string));
    
            var idEstablecimientoProcedenciaParameter = idEstablecimientoProcedencia.HasValue ?
                new ObjectParameter("IdEstablecimientoProcedencia", idEstablecimientoProcedencia) :
                new ObjectParameter("IdEstablecimientoProcedencia", typeof(int));
    
            var idEstablecimientoDestinoParameter = idEstablecimientoDestino.HasValue ?
                new ObjectParameter("IdEstablecimientoDestino", idEstablecimientoDestino) :
                new ObjectParameter("IdEstablecimientoDestino", typeof(int));
    
            var patenteCamionParameter = patenteCamion != null ?
                new ObjectParameter("PatenteCamion", patenteCamion) :
                new ObjectParameter("PatenteCamion", typeof(string));
    
            var patenteAcopladoParameter = patenteAcoplado != null ?
                new ObjectParameter("PatenteAcoplado", patenteAcoplado) :
                new ObjectParameter("PatenteAcoplado", typeof(string));
    
            var kmRecorridosParameter = kmRecorridos.HasValue ?
                new ObjectParameter("KmRecorridos", kmRecorridos) :
                new ObjectParameter("KmRecorridos", typeof(decimal));
    
            var estadoFleteParameter = estadoFlete.HasValue ?
                new ObjectParameter("EstadoFlete", estadoFlete) :
                new ObjectParameter("EstadoFlete", typeof(int));
    
            var cantHorasParameter = cantHoras.HasValue ?
                new ObjectParameter("CantHoras", cantHoras) :
                new ObjectParameter("CantHoras", typeof(decimal));
    
            var tarifaReferenciaParameter = tarifaReferencia.HasValue ?
                new ObjectParameter("TarifaReferencia", tarifaReferencia) :
                new ObjectParameter("TarifaReferencia", typeof(decimal));
    
            var tarifaRealParameter = tarifaReal.HasValue ?
                new ObjectParameter("TarifaReal", tarifaReal) :
                new ObjectParameter("TarifaReal", typeof(decimal));
    
            var idClientePagadorDelFleteParameter = idClientePagadorDelFlete.HasValue ?
                new ObjectParameter("IdClientePagadorDelFlete", idClientePagadorDelFlete) :
                new ObjectParameter("IdClientePagadorDelFlete", typeof(int));
    
            var estadoEnSAPParameter = estadoEnSAP.HasValue ?
                new ObjectParameter("EstadoEnSAP", estadoEnSAP) :
                new ObjectParameter("EstadoEnSAP", typeof(int));
    
            var estadoEnAFIPParameter = estadoEnAFIP.HasValue ?
                new ObjectParameter("EstadoEnAFIP", estadoEnAFIP) :
                new ObjectParameter("EstadoEnAFIP", typeof(int));
    
            var idGranoParameter = idGrano.HasValue ?
                new ObjectParameter("IdGrano", idGrano) :
                new ObjectParameter("IdGrano", typeof(int));
    
            var codigoAnulacionAfipParameter = codigoAnulacionAfip.HasValue ?
                new ObjectParameter("CodigoAnulacionAfip", codigoAnulacionAfip) :
                new ObjectParameter("CodigoAnulacionAfip", typeof(decimal));
    
            var fechaAnulacionAfipParameter = fechaAnulacionAfip.HasValue ?
                new ObjectParameter("FechaAnulacionAfip", fechaAnulacionAfip) :
                new ObjectParameter("FechaAnulacionAfip", typeof(System.DateTime));
    
            var codigoRespuestaEnvioSAPParameter = codigoRespuestaEnvioSAP != null ?
                new ObjectParameter("CodigoRespuestaEnvioSAP", codigoRespuestaEnvioSAP) :
                new ObjectParameter("CodigoRespuestaEnvioSAP", typeof(string));
    
            var codigoRespuestaAnulacionSAPParameter = codigoRespuestaAnulacionSAP != null ?
                new ObjectParameter("CodigoRespuestaAnulacionSAP", codigoRespuestaAnulacionSAP) :
                new ObjectParameter("CodigoRespuestaAnulacionSAP", typeof(string));
    
            var mensajeRespuestaEnvioSAPParameter = mensajeRespuestaEnvioSAP != null ?
                new ObjectParameter("MensajeRespuestaEnvioSAP", mensajeRespuestaEnvioSAP) :
                new ObjectParameter("MensajeRespuestaEnvioSAP", typeof(string));
    
            var mensajeRespuestaAnulacionSAPParameter = mensajeRespuestaAnulacionSAP != null ?
                new ObjectParameter("MensajeRespuestaAnulacionSAP", mensajeRespuestaAnulacionSAP) :
                new ObjectParameter("MensajeRespuestaAnulacionSAP", typeof(string));
    
            var idEstablecimientoDestinoCambioParameter = idEstablecimientoDestinoCambio.HasValue ?
                new ObjectParameter("IdEstablecimientoDestinoCambio", idEstablecimientoDestinoCambio) :
                new ObjectParameter("IdEstablecimientoDestinoCambio", typeof(int));
    
            var idClienteDestinatarioCambioParameter = idClienteDestinatarioCambio.HasValue ?
                new ObjectParameter("IdClienteDestinatarioCambio", idClienteDestinatarioCambio) :
                new ObjectParameter("IdClienteDestinatarioCambio", typeof(int));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            var pHumedadParameter = pHumedad.HasValue ?
                new ObjectParameter("PHumedad", pHumedad) :
                new ObjectParameter("PHumedad", typeof(decimal));
    
            var pOtrosParameter = pOtros.HasValue ?
                new ObjectParameter("POtros", pOtros) :
                new ObjectParameter("POtros", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GuardarSolicitud", idSolicitudParameter, idTipoDeCartaParameter, observacionAfipParameter, numeroCartaDePorteParameter, ceeParameter, ctgParameter, fechaDeEmisionParameter, fechaDeCargaParameter, fechaDeVencimientoParameter, idProveedorTitularCartaDePorteParameter, idClienteIntermediarioParameter, idClienteRemitenteComercialParameter, remitenteComercialComoCanjeadorParameter, idClienteCorredorParameter, idClienteEntregadorParameter, idClienteDestinatarioParameter, idClienteDestinoParameter, idProveedorTransportistaParameter, idChoferTransportistaParameter, idChoferParameter, idCosechaParameter, idEspecieParameter, numeroContratoParameter, sapContratoParameter, sinContratoParameter, cargaPesadaDestinoParameter, kilogramosEstimadosParameter, declaracionDeCalidadParameter, idConformeCondicionalParameter, pesoBrutoParameter, pesoTaraParameter, observacionesParameter, loteDeMaterialParameter, idEstablecimientoProcedenciaParameter, idEstablecimientoDestinoParameter, patenteCamionParameter, patenteAcopladoParameter, kmRecorridosParameter, estadoFleteParameter, cantHorasParameter, tarifaReferenciaParameter, tarifaRealParameter, idClientePagadorDelFleteParameter, estadoEnSAPParameter, estadoEnAFIPParameter, idGranoParameter, codigoAnulacionAfipParameter, fechaAnulacionAfipParameter, codigoRespuestaEnvioSAPParameter, codigoRespuestaAnulacionSAPParameter, mensajeRespuestaEnvioSAPParameter, mensajeRespuestaAnulacionSAPParameter, idEstablecimientoDestinoCambioParameter, idClienteDestinatarioCambioParameter, usuarioParameter, idEmpresaParameter, pHumedadParameter, pOtrosParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GuardarSolicitudRecibida(Nullable<int> idSolicitudRecibida, Nullable<int> idTipoDeCarta, string numeroCartaDePorte, string cee, string ctg, Nullable<System.DateTime> fechaDeEmision, string idProveedorTitularCartaDePorte, string idClienteIntermediario, string idClienteRemitenteComercial, string idClienteCorredor, string idClienteEntregador, string idClienteDestinatario, string idClienteDestino, string idProveedorTransportista, string idChofer, Nullable<int> idCosecha, Nullable<int> idEspecie, Nullable<int> numeroContrato, Nullable<bool> cargaPesadaDestino, Nullable<decimal> kilogramosEstimados, Nullable<int> idConformeCondicional, Nullable<decimal> pesoBruto, Nullable<decimal> pesoTara, string observaciones, string codigoEstablecimientoProcedencia, Nullable<int> idLocalidadEstablecimientoProcedencia, string idEstablecimientoDestino, string patenteCamion, string patenteAcoplado, Nullable<decimal> kmRecorridos, Nullable<int> estadoFlete, Nullable<decimal> cantHoras, Nullable<decimal> tarifaReferencia, Nullable<decimal> tarifaReal, Nullable<int> idGrano, string codigoEstablecimientoDestinoCambio, Nullable<int> idLocalidadEstablecimientoDestinoCambio, string cuitEstablecimientoDestinoCambio, Nullable<System.DateTime> fechaDeDescarga, Nullable<System.DateTime> fechaDeArribo, Nullable<decimal> pesoNetoDescarga, string usuario, Nullable<int> idEmpresa)
        {
            var idSolicitudRecibidaParameter = idSolicitudRecibida.HasValue ?
                new ObjectParameter("IdSolicitudRecibida", idSolicitudRecibida) :
                new ObjectParameter("IdSolicitudRecibida", typeof(int));
    
            var idTipoDeCartaParameter = idTipoDeCarta.HasValue ?
                new ObjectParameter("IdTipoDeCarta", idTipoDeCarta) :
                new ObjectParameter("IdTipoDeCarta", typeof(int));
    
            var numeroCartaDePorteParameter = numeroCartaDePorte != null ?
                new ObjectParameter("NumeroCartaDePorte", numeroCartaDePorte) :
                new ObjectParameter("NumeroCartaDePorte", typeof(string));
    
            var ceeParameter = cee != null ?
                new ObjectParameter("Cee", cee) :
                new ObjectParameter("Cee", typeof(string));
    
            var ctgParameter = ctg != null ?
                new ObjectParameter("Ctg", ctg) :
                new ObjectParameter("Ctg", typeof(string));
    
            var fechaDeEmisionParameter = fechaDeEmision.HasValue ?
                new ObjectParameter("FechaDeEmision", fechaDeEmision) :
                new ObjectParameter("FechaDeEmision", typeof(System.DateTime));
    
            var idProveedorTitularCartaDePorteParameter = idProveedorTitularCartaDePorte != null ?
                new ObjectParameter("idProveedorTitularCartaDePorte", idProveedorTitularCartaDePorte) :
                new ObjectParameter("idProveedorTitularCartaDePorte", typeof(string));
    
            var idClienteIntermediarioParameter = idClienteIntermediario != null ?
                new ObjectParameter("IdClienteIntermediario", idClienteIntermediario) :
                new ObjectParameter("IdClienteIntermediario", typeof(string));
    
            var idClienteRemitenteComercialParameter = idClienteRemitenteComercial != null ?
                new ObjectParameter("IdClienteRemitenteComercial", idClienteRemitenteComercial) :
                new ObjectParameter("IdClienteRemitenteComercial", typeof(string));
    
            var idClienteCorredorParameter = idClienteCorredor != null ?
                new ObjectParameter("IdClienteCorredor", idClienteCorredor) :
                new ObjectParameter("IdClienteCorredor", typeof(string));
    
            var idClienteEntregadorParameter = idClienteEntregador != null ?
                new ObjectParameter("IdClienteEntregador", idClienteEntregador) :
                new ObjectParameter("IdClienteEntregador", typeof(string));
    
            var idClienteDestinatarioParameter = idClienteDestinatario != null ?
                new ObjectParameter("IdClienteDestinatario", idClienteDestinatario) :
                new ObjectParameter("IdClienteDestinatario", typeof(string));
    
            var idClienteDestinoParameter = idClienteDestino != null ?
                new ObjectParameter("IdClienteDestino", idClienteDestino) :
                new ObjectParameter("IdClienteDestino", typeof(string));
    
            var idProveedorTransportistaParameter = idProveedorTransportista != null ?
                new ObjectParameter("IdProveedorTransportista", idProveedorTransportista) :
                new ObjectParameter("IdProveedorTransportista", typeof(string));
    
            var idChoferParameter = idChofer != null ?
                new ObjectParameter("IdChofer", idChofer) :
                new ObjectParameter("IdChofer", typeof(string));
    
            var idCosechaParameter = idCosecha.HasValue ?
                new ObjectParameter("IdCosecha", idCosecha) :
                new ObjectParameter("IdCosecha", typeof(int));
    
            var idEspecieParameter = idEspecie.HasValue ?
                new ObjectParameter("IdEspecie", idEspecie) :
                new ObjectParameter("IdEspecie", typeof(int));
    
            var numeroContratoParameter = numeroContrato.HasValue ?
                new ObjectParameter("NumeroContrato", numeroContrato) :
                new ObjectParameter("NumeroContrato", typeof(int));
    
            var cargaPesadaDestinoParameter = cargaPesadaDestino.HasValue ?
                new ObjectParameter("CargaPesadaDestino", cargaPesadaDestino) :
                new ObjectParameter("CargaPesadaDestino", typeof(bool));
    
            var kilogramosEstimadosParameter = kilogramosEstimados.HasValue ?
                new ObjectParameter("KilogramosEstimados", kilogramosEstimados) :
                new ObjectParameter("KilogramosEstimados", typeof(decimal));
    
            var idConformeCondicionalParameter = idConformeCondicional.HasValue ?
                new ObjectParameter("IdConformeCondicional", idConformeCondicional) :
                new ObjectParameter("IdConformeCondicional", typeof(int));
    
            var pesoBrutoParameter = pesoBruto.HasValue ?
                new ObjectParameter("PesoBruto", pesoBruto) :
                new ObjectParameter("PesoBruto", typeof(decimal));
    
            var pesoTaraParameter = pesoTara.HasValue ?
                new ObjectParameter("PesoTara", pesoTara) :
                new ObjectParameter("PesoTara", typeof(decimal));
    
            var observacionesParameter = observaciones != null ?
                new ObjectParameter("Observaciones", observaciones) :
                new ObjectParameter("Observaciones", typeof(string));
    
            var codigoEstablecimientoProcedenciaParameter = codigoEstablecimientoProcedencia != null ?
                new ObjectParameter("CodigoEstablecimientoProcedencia", codigoEstablecimientoProcedencia) :
                new ObjectParameter("CodigoEstablecimientoProcedencia", typeof(string));
    
            var idLocalidadEstablecimientoProcedenciaParameter = idLocalidadEstablecimientoProcedencia.HasValue ?
                new ObjectParameter("IdLocalidadEstablecimientoProcedencia", idLocalidadEstablecimientoProcedencia) :
                new ObjectParameter("IdLocalidadEstablecimientoProcedencia", typeof(int));
    
            var idEstablecimientoDestinoParameter = idEstablecimientoDestino != null ?
                new ObjectParameter("IdEstablecimientoDestino", idEstablecimientoDestino) :
                new ObjectParameter("IdEstablecimientoDestino", typeof(string));
    
            var patenteCamionParameter = patenteCamion != null ?
                new ObjectParameter("PatenteCamion", patenteCamion) :
                new ObjectParameter("PatenteCamion", typeof(string));
    
            var patenteAcopladoParameter = patenteAcoplado != null ?
                new ObjectParameter("PatenteAcoplado", patenteAcoplado) :
                new ObjectParameter("PatenteAcoplado", typeof(string));
    
            var kmRecorridosParameter = kmRecorridos.HasValue ?
                new ObjectParameter("KmRecorridos", kmRecorridos) :
                new ObjectParameter("KmRecorridos", typeof(decimal));
    
            var estadoFleteParameter = estadoFlete.HasValue ?
                new ObjectParameter("EstadoFlete", estadoFlete) :
                new ObjectParameter("EstadoFlete", typeof(int));
    
            var cantHorasParameter = cantHoras.HasValue ?
                new ObjectParameter("CantHoras", cantHoras) :
                new ObjectParameter("CantHoras", typeof(decimal));
    
            var tarifaReferenciaParameter = tarifaReferencia.HasValue ?
                new ObjectParameter("TarifaReferencia", tarifaReferencia) :
                new ObjectParameter("TarifaReferencia", typeof(decimal));
    
            var tarifaRealParameter = tarifaReal.HasValue ?
                new ObjectParameter("TarifaReal", tarifaReal) :
                new ObjectParameter("TarifaReal", typeof(decimal));
    
            var idGranoParameter = idGrano.HasValue ?
                new ObjectParameter("IdGrano", idGrano) :
                new ObjectParameter("IdGrano", typeof(int));
    
            var codigoEstablecimientoDestinoCambioParameter = codigoEstablecimientoDestinoCambio != null ?
                new ObjectParameter("CodigoEstablecimientoDestinoCambio", codigoEstablecimientoDestinoCambio) :
                new ObjectParameter("CodigoEstablecimientoDestinoCambio", typeof(string));
    
            var idLocalidadEstablecimientoDestinoCambioParameter = idLocalidadEstablecimientoDestinoCambio.HasValue ?
                new ObjectParameter("IdLocalidadEstablecimientoDestinoCambio", idLocalidadEstablecimientoDestinoCambio) :
                new ObjectParameter("IdLocalidadEstablecimientoDestinoCambio", typeof(int));
    
            var cuitEstablecimientoDestinoCambioParameter = cuitEstablecimientoDestinoCambio != null ?
                new ObjectParameter("CuitEstablecimientoDestinoCambio", cuitEstablecimientoDestinoCambio) :
                new ObjectParameter("CuitEstablecimientoDestinoCambio", typeof(string));
    
            var fechaDeDescargaParameter = fechaDeDescarga.HasValue ?
                new ObjectParameter("FechaDeDescarga", fechaDeDescarga) :
                new ObjectParameter("FechaDeDescarga", typeof(System.DateTime));
    
            var fechaDeArriboParameter = fechaDeArribo.HasValue ?
                new ObjectParameter("FechaDeArribo", fechaDeArribo) :
                new ObjectParameter("FechaDeArribo", typeof(System.DateTime));
    
            var pesoNetoDescargaParameter = pesoNetoDescarga.HasValue ?
                new ObjectParameter("PesoNetoDescarga", pesoNetoDescarga) :
                new ObjectParameter("PesoNetoDescarga", typeof(decimal));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GuardarSolicitudRecibida", idSolicitudRecibidaParameter, idTipoDeCartaParameter, numeroCartaDePorteParameter, ceeParameter, ctgParameter, fechaDeEmisionParameter, idProveedorTitularCartaDePorteParameter, idClienteIntermediarioParameter, idClienteRemitenteComercialParameter, idClienteCorredorParameter, idClienteEntregadorParameter, idClienteDestinatarioParameter, idClienteDestinoParameter, idProveedorTransportistaParameter, idChoferParameter, idCosechaParameter, idEspecieParameter, numeroContratoParameter, cargaPesadaDestinoParameter, kilogramosEstimadosParameter, idConformeCondicionalParameter, pesoBrutoParameter, pesoTaraParameter, observacionesParameter, codigoEstablecimientoProcedenciaParameter, idLocalidadEstablecimientoProcedenciaParameter, idEstablecimientoDestinoParameter, patenteCamionParameter, patenteAcopladoParameter, kmRecorridosParameter, estadoFleteParameter, cantHorasParameter, tarifaReferenciaParameter, tarifaRealParameter, idGranoParameter, codigoEstablecimientoDestinoCambioParameter, idLocalidadEstablecimientoDestinoCambioParameter, cuitEstablecimientoDestinoCambioParameter, fechaDeDescargaParameter, fechaDeArriboParameter, pesoNetoDescargaParameter, usuarioParameter, idEmpresaParameter);
        }
    
        public virtual int GuardarSox1116A(Nullable<int> idCartaDePorte1116A, Nullable<int> idSolicitud, string numero1116A, Nullable<System.DateTime> fecha1116A, string usuario)
        {
            var idCartaDePorte1116AParameter = idCartaDePorte1116A.HasValue ?
                new ObjectParameter("IdCartaDePorte1116A", idCartaDePorte1116A) :
                new ObjectParameter("IdCartaDePorte1116A", typeof(int));
    
            var idSolicitudParameter = idSolicitud.HasValue ?
                new ObjectParameter("IdSolicitud", idSolicitud) :
                new ObjectParameter("IdSolicitud", typeof(int));
    
            var numero1116AParameter = numero1116A != null ?
                new ObjectParameter("Numero1116A", numero1116A) :
                new ObjectParameter("Numero1116A", typeof(string));
    
            var fecha1116AParameter = fecha1116A.HasValue ?
                new ObjectParameter("Fecha1116A", fecha1116A) :
                new ObjectParameter("Fecha1116A", typeof(System.DateTime));
    
            var usuarioParameter = usuario != null ?
                new ObjectParameter("Usuario", usuario) :
                new ObjectParameter("Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarSox1116A", idCartaDePorte1116AParameter, idSolicitudParameter, numero1116AParameter, fecha1116AParameter, usuarioParameter);
        }
    
        public virtual int GuardarUpdateClienteProspecto(Nullable<int> idCliente, string razonSocial, string nombreFantasia, string cuit, Nullable<int> iDTipoDocumentoSAP, Nullable<int> idClientePrincipal, string calle, string numero, string dto, string piso, string cp, string poblacion, Nullable<bool> activo, string grupoComercial, string claveGrupo, string tratamiento, string descripcionGe, Nullable<bool> esProspecto, Nullable<decimal> idclienteprospecto, Nullable<int> idSapOrganizacionDeVenta, Nullable<int> idEmpresa)
        {
            var idClienteParameter = idCliente.HasValue ?
                new ObjectParameter("IdCliente", idCliente) :
                new ObjectParameter("IdCliente", typeof(int));
    
            var razonSocialParameter = razonSocial != null ?
                new ObjectParameter("RazonSocial", razonSocial) :
                new ObjectParameter("RazonSocial", typeof(string));
    
            var nombreFantasiaParameter = nombreFantasia != null ?
                new ObjectParameter("NombreFantasia", nombreFantasia) :
                new ObjectParameter("NombreFantasia", typeof(string));
    
            var cuitParameter = cuit != null ?
                new ObjectParameter("Cuit", cuit) :
                new ObjectParameter("Cuit", typeof(string));
    
            var iDTipoDocumentoSAPParameter = iDTipoDocumentoSAP.HasValue ?
                new ObjectParameter("IDTipoDocumentoSAP", iDTipoDocumentoSAP) :
                new ObjectParameter("IDTipoDocumentoSAP", typeof(int));
    
            var idClientePrincipalParameter = idClientePrincipal.HasValue ?
                new ObjectParameter("IdClientePrincipal", idClientePrincipal) :
                new ObjectParameter("IdClientePrincipal", typeof(int));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var dtoParameter = dto != null ?
                new ObjectParameter("Dto", dto) :
                new ObjectParameter("Dto", typeof(string));
    
            var pisoParameter = piso != null ?
                new ObjectParameter("Piso", piso) :
                new ObjectParameter("Piso", typeof(string));
    
            var cpParameter = cp != null ?
                new ObjectParameter("Cp", cp) :
                new ObjectParameter("Cp", typeof(string));
    
            var poblacionParameter = poblacion != null ?
                new ObjectParameter("Poblacion", poblacion) :
                new ObjectParameter("Poblacion", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            var grupoComercialParameter = grupoComercial != null ?
                new ObjectParameter("GrupoComercial", grupoComercial) :
                new ObjectParameter("GrupoComercial", typeof(string));
    
            var claveGrupoParameter = claveGrupo != null ?
                new ObjectParameter("ClaveGrupo", claveGrupo) :
                new ObjectParameter("ClaveGrupo", typeof(string));
    
            var tratamientoParameter = tratamiento != null ?
                new ObjectParameter("Tratamiento", tratamiento) :
                new ObjectParameter("Tratamiento", typeof(string));
    
            var descripcionGeParameter = descripcionGe != null ?
                new ObjectParameter("DescripcionGe", descripcionGe) :
                new ObjectParameter("DescripcionGe", typeof(string));
    
            var esProspectoParameter = esProspecto.HasValue ?
                new ObjectParameter("EsProspecto", esProspecto) :
                new ObjectParameter("EsProspecto", typeof(bool));
    
            var idclienteprospectoParameter = idclienteprospecto.HasValue ?
                new ObjectParameter("idclienteprospecto", idclienteprospecto) :
                new ObjectParameter("idclienteprospecto", typeof(decimal));
    
            var idSapOrganizacionDeVentaParameter = idSapOrganizacionDeVenta.HasValue ?
                new ObjectParameter("IdSapOrganizacionDeVenta", idSapOrganizacionDeVenta) :
                new ObjectParameter("IdSapOrganizacionDeVenta", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarUpdateClienteProspecto", idClienteParameter, razonSocialParameter, nombreFantasiaParameter, cuitParameter, iDTipoDocumentoSAPParameter, idClientePrincipalParameter, calleParameter, numeroParameter, dtoParameter, pisoParameter, cpParameter, poblacionParameter, activoParameter, grupoComercialParameter, claveGrupoParameter, tratamientoParameter, descripcionGeParameter, esProspectoParameter, idclienteprospectoParameter, idSapOrganizacionDeVentaParameter, idEmpresaParameter);
        }
    
        public virtual int GuardarUpdateProveedorProspecto(Nullable<int> idProveedor, string sap_Id, string nombre, Nullable<int> idTipoDocumentoSAP, string numeroDocumento, string calle, string piso, string departamento, string numero, string cP, string ciudad, string pais, Nullable<bool> activo, Nullable<bool> esProspecto, Nullable<decimal> idproveedorprospecto, Nullable<int> idEmpresa)
        {
            var idProveedorParameter = idProveedor.HasValue ?
                new ObjectParameter("IdProveedor", idProveedor) :
                new ObjectParameter("IdProveedor", typeof(int));
    
            var sap_IdParameter = sap_Id != null ?
                new ObjectParameter("Sap_Id", sap_Id) :
                new ObjectParameter("Sap_Id", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idTipoDocumentoSAPParameter = idTipoDocumentoSAP.HasValue ?
                new ObjectParameter("IdTipoDocumentoSAP", idTipoDocumentoSAP) :
                new ObjectParameter("IdTipoDocumentoSAP", typeof(int));
    
            var numeroDocumentoParameter = numeroDocumento != null ?
                new ObjectParameter("NumeroDocumento", numeroDocumento) :
                new ObjectParameter("NumeroDocumento", typeof(string));
    
            var calleParameter = calle != null ?
                new ObjectParameter("Calle", calle) :
                new ObjectParameter("Calle", typeof(string));
    
            var pisoParameter = piso != null ?
                new ObjectParameter("Piso", piso) :
                new ObjectParameter("Piso", typeof(string));
    
            var departamentoParameter = departamento != null ?
                new ObjectParameter("Departamento", departamento) :
                new ObjectParameter("Departamento", typeof(string));
    
            var numeroParameter = numero != null ?
                new ObjectParameter("Numero", numero) :
                new ObjectParameter("Numero", typeof(string));
    
            var cPParameter = cP != null ?
                new ObjectParameter("CP", cP) :
                new ObjectParameter("CP", typeof(string));
    
            var ciudadParameter = ciudad != null ?
                new ObjectParameter("Ciudad", ciudad) :
                new ObjectParameter("Ciudad", typeof(string));
    
            var paisParameter = pais != null ?
                new ObjectParameter("Pais", pais) :
                new ObjectParameter("Pais", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            var esProspectoParameter = esProspecto.HasValue ?
                new ObjectParameter("EsProspecto", esProspecto) :
                new ObjectParameter("EsProspecto", typeof(bool));
    
            var idproveedorprospectoParameter = idproveedorprospecto.HasValue ?
                new ObjectParameter("idproveedorprospecto", idproveedorprospecto) :
                new ObjectParameter("idproveedorprospecto", typeof(decimal));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GuardarUpdateProveedorProspecto", idProveedorParameter, sap_IdParameter, nombreParameter, idTipoDocumentoSAPParameter, numeroDocumentoParameter, calleParameter, pisoParameter, departamentoParameter, numeroParameter, cPParameter, ciudadParameter, paisParameter, activoParameter, esProspectoParameter, idproveedorprospectoParameter, idEmpresaParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> ReservaCartaDePorte(string usuarioReserva, Nullable<int> idEstablecimientoOrigen, Nullable<int> idTipoCartaDePorte, Nullable<int> idGrupoEmpresa, Nullable<int> idEmpresa)
        {
            var usuarioReservaParameter = usuarioReserva != null ?
                new ObjectParameter("UsuarioReserva", usuarioReserva) :
                new ObjectParameter("UsuarioReserva", typeof(string));
    
            var idEstablecimientoOrigenParameter = idEstablecimientoOrigen.HasValue ?
                new ObjectParameter("IdEstablecimientoOrigen", idEstablecimientoOrigen) :
                new ObjectParameter("IdEstablecimientoOrigen", typeof(int));
    
            var idTipoCartaDePorteParameter = idTipoCartaDePorte.HasValue ?
                new ObjectParameter("IdTipoCartaDePorte", idTipoCartaDePorte) :
                new ObjectParameter("IdTipoCartaDePorte", typeof(int));
    
            var idGrupoEmpresaParameter = idGrupoEmpresa.HasValue ?
                new ObjectParameter("IdGrupoEmpresa", idGrupoEmpresa) :
                new ObjectParameter("IdGrupoEmpresa", typeof(int));
    
            var idEmpresaParameter = idEmpresa.HasValue ?
                new ObjectParameter("IdEmpresa", idEmpresa) :
                new ObjectParameter("IdEmpresa", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("ReservaCartaDePorte", usuarioReservaParameter, idEstablecimientoOrigenParameter, idTipoCartaDePorteParameter, idGrupoEmpresaParameter, idEmpresaParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
